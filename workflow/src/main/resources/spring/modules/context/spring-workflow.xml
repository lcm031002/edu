<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManagerWorkFlow" />
	<bean id="transactionManagerWorkFlow"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryJBPM" />
	</bean>
	<!-- JBPM 4.4 -->
	<bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper">
	</bean>

	<bean id="processEngine" factory-bean="springHelper"
		factory-method="createProcessEngine" />

	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService"></bean>
	<bean id="identityService" factory-bean="processEngine"
		factory-method="getIdentityService"></bean>
	<bean id="executionService" factory-bean="processEngine"
		factory-method="getExecutionService"></bean>
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService"></bean>
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService"></bean>
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService"></bean>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:properties/dataSource.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>	
	<bean id="sessionFactoryJBPM"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		lazy-init="default">
		<property name="configLocations">
			<list>
				<value>classpath:/jbpm.hibernate.cfg.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSourceJBPM" />
		<property name="hibernateProperties">
			<props>
				<!-- org.hibernate.dialect.OracleDialect -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<!-- org.hibernate.hql.ast.ASTQueryTranslatorFactory -->
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.ast.ASTQueryTranslatorFactory
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.default_batch_fetch_size">500</prop>
				<prop key="hibernate.dbcp.maxActive">1000</prop>
				<prop key="hibernate.dbcp.whenExhaustedAction">1</prop>
				<prop key="hibernate.dbcp.maxWait">1200</prop>
				<prop key="hibernate.dbcp.maxIdle">100</prop>
				<prop key="hibernate.dbcp.ps.maxActive">1000</prop>
				<prop key="hibernate.dbcp.ps.whenExhaustedAction">1</prop>
				<prop key="hibernate.dbcp.ps.maxWait">1200</prop>
				<prop key="hibernate.dbcp.ps.maxIdle">100</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置数据源，使用proxool连接池 -->
	<bean id="dataSourceJBPM"  class="com.alibaba.druid.pool.DruidDataSource"   init-method="init" destroy-method="close"> 
	
	   <property name="driverClassName" value="${jdbc.driverClassName} " />
	   
	  <property name="url" value="${jdbc.driverUrl}" /> 
	  
	  <property name="username" value="${jdbc.username}"/> 
	  
	  <property name="password" value="${jdbc.password}" /> 
	  <!-- 配置初始化大小、最小、最大 --> 
	  <property name="initialSize" value="${jdbc.initialSize}" /> 
	  
	  <property name="minIdle" value="${jdbc.minIdle}" /> 
	  
	  <property name="maxActive" value="${jdbc.maxActive}" />
	
	  <!-- 配置获取连接等待超时的时间 --> 
	  <property name="maxWait" value="${jdbc.maxWait}" />
	
	  <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
	  <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	
	  <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
	  <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	
	  <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
	
	  <!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
	  <property name="testOnBorrow" value="${jdbc.testOnBorrow}" /> 
	  
	  <property name="testOnReturn" value="${jdbc.testOnReturn}" />
	
	  <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
	  <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" /> 
	  
	  <property name="maxPoolPreparedStatementPerConnectionSize"  value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
	
	  <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
	
	  <property name="defaultAutoCommit" value="true" />
	
	  <!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		  <property name="validationQuery" value="${jdbc.validationQuery}" /> 
		  
		  <property name="filters" value="${jdbc.filters}" /> 
		 </bean>


</beans>    

