<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.EmployeeInfoDao">
	<resultMap type="map" id="dataMap">
		<id column="id" property="id"/>
		<result column="buName" property="buName"/>
		<result column="branchName" property="branchName"/>
		<result column="post_name" property="post_name"/>
		<result column="status" property="status"/>
		<result column="emp_id" property="emp_id"/>
		<result column="post_id" property="post_id"/>
	</resultMap>

	<!-- 查询员工档案信息列表 -->
	<select id="queryEmployeeForPage" parameterType="java.util.Map"
			resultType="com.edu.erp.model.EmployeeInfo">
		select tef.id,
            tef.encoding,
            tef.employee_name,
            tef.sex,
            tef.phone,
            tef.id_card,
            tef.address,
            tef.status,
            tef.email,
            tef.user_type,
            tdd.name as user_type_name
		from TAB_EMPLOYEE_INFO tef
        left join tp_dict_data tdd
          on tdd.code = tef.user_type
        left join tp_dict_type tdt
          on tdt.id = tdd.type_id
        where tdt.code = 'employee_type'
        <if test="employee_name!=null and employee_name!=''">
           and (tef.employee_name like '%'||#{employee_name,jdbcType=VARCHAR}||'%'
            or tef.encoding like '%'||#{employee_name,jdbcType=VARCHAR}||'%')
        </if>
        <if test="userType!=null and userType!=-1">
            and tef.user_type=#{userType,jdbcType=NUMERIC}
        </if>
		order by tef.create_time desc
	</select>

	<!-- 按照员工id查询该员工信息-->
	<select id="queryEmployeeById" parameterType="java.lang.Long"
			resultType="com.edu.erp.model.EmployeeInfo">
		select  tef.id,
				tef.encoding,
				tef.employee_name,
				tef.sex,
				tef.phone,
				tef.id_card,
				tef.address,
				tef.status,
				tef.email,
				tef.user_type,
				tdd.name as user_type_name
		from TAB_EMPLOYEE_INFO tef
		left join tp_dict_data tdd
          on tdd.code = tef.user_type
        left join tp_dict_type tdt
          on tdt.id = tdd.type_id
        where tdt.code = 'employee_type'
          and tef.id = #{employeeId}
	</select>

	<select id="queryFieldKey" resultType="java.util.Map">
		select fieldKey
		from ebs_employeeext_reg
		where fieldStatus=2 or fieldStatus=1
	</select>

	<!-- 根据id查询员工档案 -->
	<select id="queryEmployee" parameterType="map" resultType="java.util.Map">
		SELECT ${str}
		FROM TAB_EMPLOYEE_INFO
		WHERE id=#{id,jdbcType=NUMERIC}
	</select>

	<!-- 根据encoding查询员工档案 -->
	<select id="queryEmployeeByEncoding" parameterType="map" resultType="com.edu.erp.model.EmployeeInfo">
		SELECT *
		FROM TAB_EMPLOYEE_INFO
		WHERE encoding=#{encoding,jdbcType=VARCHAR}
	</select>
	<!-- 查询员工档案 -->
	<select id="queryOtherEmployeeByParam" parameterType="com.edu.erp.model.EmployeeInfo"
			resultType="com.edu.erp.model.EmployeeInfo">
		SELECT *
		FROM TAB_EMPLOYEE_INFO
		WHERE status != 0
		<if test="id !=null">
			and id!= #{id,jdbcType=NUMERIC}
		</if>
		<if test="id_card != null">
			and id_card=#{id_card,jdbcType=VARCHAR}
		</if>
		<if test="employee_name != null">
			and employee_name=#{employee_name,jdbcType=VARCHAR}
		</if>
		<if test="phone != null">
			and phone=#{phone,jdbcType=VARCHAR}
		</if>
		<if test="encoding != null">
			and encoding=#{encoding,jdbcType=VARCHAR}
		</if>
	</select>


	<!-- 添加员工 -->
	<insert id="insertEmployee" parameterType="com.edu.erp.model.EmployeeInfo" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO TAB_EMPLOYEE_INFO
		(
		encoding,
		id_card,
		employee_name,
		phone,
		sex,
		user_type,
		status,
		create_user,
		create_time
		)
		values (
		#{encoding,jdbcType=VARCHAR},
		#{id_card,jdbcType=VARCHAR},
		#{employee_name,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{sex,jdbcType=NUMERIC},
		#{user_type,jdbcType=NUMERIC},
		#{status,jdbcType=NUMERIC},
		#{create_user,jdbcType=NUMERIC},
		#{create_time,jdbcType=TIMESTAMP}
		)
	</insert>

	<!-- 更新员工档案 -->
	<update id="updateEmployee" parameterType="java.util.Map">
		UPDATE
		TAB_EMPLOYEE_INFO
		SET
		${str}
		WHERE id=#{id}
	</update>

	<!-- 根据条件查询符合条件的员工id和编码和姓名 -->
	<select id="queryEmployeeInfo" parameterType="string" resultType="java.util.Map">
		select
		taf.encoding as encoding,
		taf.id as id,
		taf.employee_name as employee_name
		FROM tab_employee_info taf
		<where>
			 taf.status=1
			<if test="searchInfo!=null and searchInfo!=''">
				AND( taf.encoding like '%'||#{searchInfo,jdbcType=VARCHAR}||'%'
				OR taf.employee_name like '%'||#{searchInfo,jdbcType=VARCHAR}||'%'
				)
			</if>
		</where>
		limit 10
	</select>

	<!-- 查询员工教育经历 -->
	<select id="queryEmployeeEdu" parameterType="long" resultType="com.edu.erp.model.EmployeeEdu">
		select * from TAB_EMPLOYEE_EDU where employee_id=#{employee_id,jdbcType=NUMERIC} order by id
	</select>

	<!-- 添加员工教育经历 -->
	<insert id="addEmployeeEdu" parameterType="com.edu.erp.model.EmployeeEdu">
		insert into TAB_EMPLOYEE_EDU
		(
		employee_id,
		begin_time,
		end_time,
		school,
		profession,
		degree,
		certificate,
		length_school,
		enclosure,
		remark
		)
		values (
		#{employee_id,jdbcType=NUMERIC},
		#{begin_time,jdbcType=DATE},
		#{end_time,jdbcType=DATE},
		#{school,jdbcType=VARCHAR},
		#{profession,jdbcType=VARCHAR},
		#{degree,jdbcType=VARCHAR},
		#{certificate,jdbcType=VARCHAR},
		#{length_school,jdbcType=NUMERIC},
		#{enclosure,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 修改员工教育经历 -->
	<update id="updateEmployeeEdu" parameterType="com.edu.erp.model.EmployeeEdu">
		update TAB_EMPLOYEE_EDU
		set
		begin_time=#{begin_time,jdbcType=DATE},
		end_time= #{end_time,jdbcType=DATE},
		school= #{school,jdbcType=VARCHAR},
		profession=#{profession,jdbcType=VARCHAR},
		degree= #{degree,jdbcType=VARCHAR},
		certificate= #{certificate,jdbcType=VARCHAR},
		length_school=#{length_school,jdbcType=NUMERIC},
		enclosure=#{enclosure,jdbcType=VARCHAR},
		remark=#{remark,jdbcType=VARCHAR}
		where	id=#{id,jdbcType=NUMERIC}
	</update>

	<!-- 删除员工教育经历 -->
	<delete id="deleteEmployeeEdu" parameterType="long">
		delete from TAB_EMPLOYEE_EDU where id=#{id,jdbcType=NUMERIC}
	</delete>

	<!-- 查询员工工作经历 -->
	<select id="queryEmployeeExp" parameterType="long" resultType="com.edu.erp.model.EmployeeExperience">
		select * from TAB_EMPLOYEE_EXPERIENCE where employee_id=#{employee_id,jdbcType=NUMERIC} order by id
	</select>

	<!-- 添加员工工作经历 -->
	<insert id="addEmployeeExp" parameterType="com.edu.erp.model.EmployeeExperience">
		insert into TAB_EMPLOYEE_EXPERIENCE
		(
		employee_id,
		begin_time,
		end_time,
		company_name,
		company_type,
		job_title,
		responsibility,
		subordinates,
		reasons,
		has_prove,
		reterence,
		enclosure
		)
		values (
		#{employee_id,jdbcType=NUMERIC},
		#{begin_time,jdbcType=DATE},
		#{end_time,jdbcType=DATE},
		#{company_name,jdbcType=VARCHAR},
		#{company_type,jdbcType=VARCHAR},<!-- 公司性质 -->
		#{job_title,jdbcType=VARCHAR},<!-- 职位名称 -->
		#{responsibility,jdbcType=VARCHAR},<!-- 工作职责 -->
		#{subordinates,jdbcType=NUMERIC},<!-- 下属人数 -->
		#{reasons,jdbcType=VARCHAR},<!-- 离职原因 -->
		#{has_prove,jdbcType=NUMERIC},<!-- 是否有证明 -->
		#{reterence,jdbcType=VARCHAR},<!-- 证明信息 -->
		#{enclosure,jdbcType=VARCHAR}<!-- 附件 -->
		)
	</insert>

	<!-- 修改员工工作经历 -->
	<update id="updateEmployeeExp" parameterType="com.edu.erp.model.EmployeeExperience">
		update TAB_EMPLOYEE_EXPERIENCE
		set
		begin_time=#{begin_time,jdbcType=DATE},
		end_time=#{end_time,jdbcType=DATE},
		company_name=#{company_name,jdbcType=VARCHAR},
		company_type=#{company_type,jdbcType=VARCHAR},
		job_title=#{job_title,jdbcType=VARCHAR},
		responsibility=#{responsibility,jdbcType=VARCHAR},
		subordinates=#{subordinates,jdbcType=NUMERIC},
		reasons=#{reasons,jdbcType=VARCHAR},
		has_prove=#{has_prove,jdbcType=NUMERIC},
		reterence=#{reterence,jdbcType=VARCHAR},
		enclosure=#{enclosure,jdbcType=VARCHAR}
		where	id=#{id,jdbcType=NUMERIC}
	</update>

	<!-- 删除员工工作经历 -->
	<delete id="deleteEmployeeExp" parameterType="long">
		delete from TAB_EMPLOYEE_EXPERIENCE where id=#{id,jdbcType=NUMERIC}
	</delete>

	<!-- 查询员工工作总结 -->
	<select id="queryEmployeeSum" parameterType="long" resultType="com.edu.erp.model.EmployeeSummarize">
		select
		tes.id,
		tes.employee_id,
		tes.begin_time,
		tes.end_time,
		tes.title ,
		tes.content
		from TAB_EMPLOYEE_SUMMARIZE tes
		where tes.employee_id=#{employee_id,jdbcType=NUMERIC} order by id
	</select>

	<!-- 添加员工工作总结 -->
	<insert id="addEmployeeSum" parameterType="com.edu.erp.model.EmployeeSummarize">
		insert into TAB_EMPLOYEE_SUMMARIZE
		(
		employee_id,
		begin_time,
		end_time,
		title ,
		content
		)
		values (
		#{employee_id,jdbcType=NUMERIC},
		#{begin_time,jdbcType=DATE},
		#{end_time,jdbcType=DATE},
		#{title,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 修改员工工作总结 -->
	<update id="updateEmployeeSum" parameterType="com.edu.erp.model.EmployeeSummarize">
		update TAB_EMPLOYEE_SUMMARIZE
		set
		begin_time=#{begin_time,jdbcType=VARCHAR},
		end_time=#{end_time,jdbcType=VARCHAR},
		title=#{title,jdbcType=VARCHAR},
		content=#{content,jdbcType=VARCHAR}
		where	id=#{id,jdbcType=NUMERIC}
	</update>

	<!-- 删除员工工作总结 -->
	<delete id="deleteEmployeeSum" parameterType="long">
		delete from TAB_EMPLOYEE_SUMMARIZE where id=#{id,jdbcType=NUMERIC}
	</delete>

	<!-- 查询员工奖惩信息 -->
	<select id="queryEmployeeRew" parameterType="long" resultType="com.edu.erp.model.EmployeeReward">
		select * from TAB_EMPLOYEE_REWARD where employee_id=#{employee_id,jdbcType=NUMERIC} order by id
	</select>

	<!-- 添加员工奖惩信息 -->
	<insert id="addEmployeeRew" parameterType="com.edu.erp.model.EmployeeReward">
		insert into TAB_EMPLOYEE_REWARD
		(
		employee_id,
		date_time,
		award_party,
		award_name,
		remark,
		enclosure
		)
		values (
		#{employee_id,jdbcType=NUMERIC},
		#{date_time,jdbcType=DATE},
		#{award_party,jdbcType=VARCHAR},
		#{award_name,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{enclosure,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 修改员工奖惩信息-->
	<update id="updateEmployeeRew" parameterType="com.edu.erp.model.EmployeeReward">
		update TAB_EMPLOYEE_REWARD
		set
		date_time=#{date_time,jdbcType=DATE},
		award_party=#{award_party,jdbcType=VARCHAR},
		award_name=#{award_name,jdbcType=VARCHAR},
		remark=#{remark,jdbcType=VARCHAR},
		enclosure=#{enclosure,jdbcType=VARCHAR}
		where	id=#{id,jdbcType=NUMERIC}
	</update>

	<!-- 删除员工奖惩信息-->
	<delete id="deleteEmployeeRew" parameterType="long">
		delete from TAB_EMPLOYEE_REWARD where id=#{id,jdbcType=NUMERIC}
	</delete>

	<!-- 修改员工任职/固定信息-->
	<update id="updateEmployeeStatic" parameterType="map">
		update TAB_EMPLOYEE_INFO
		set
		employee_name=#{employee_name,jdbcType=VARCHAR},
		encoding=#{encoding,jdbcType=VARCHAR},
		phone=#{phone,jdbcType=VARCHAR},
		dept=#{dept,jdbcType=VARCHAR},
		post=#{post,jdbcType=NUMERIC},
		position=#{position,jdbcType=VARCHAR},
		poslevel=#{poslevel,jdbcType=NUMERIC},
		email=#{email,jdbcType=VARCHAR},
		enterType=#{enterType,jdbcType=NUMERIC},
		id_card=#{id_card,jdbcType=NUMERIC},
		business=#{business,jdbcType=VARCHAR}
		<if test="entryDate!=null || entryDate!=''">
			,entry_date=to_date(#{entryDate}, 'yyyy-mm-dd')
		</if>
		where id=#{id,jdbcType=NUMERIC}
	</update>


	<!-- 修改员工头像-->
	<update id="updateEmployeeImage" parameterType="map">
		update TAB_EMPLOYEE_INFO
		set
		staff_head=#{staff_head,jdbcType=VARCHAR}
		where	id=#{id,jdbcType=NUMERIC}
	</update>


	<!-- 根据员工id查询该员工绑定的岗位信息-->
	<select id="queryPostByEmpId" parameterType="long" resultMap="dataMap">
		select a.id,a.status,a.post_id,a.emp_id,tof.org_name as buName,
		tp.post_name
		from (select id,bu_id, branch_id, post_id, status,emp_id
		from TAB_EMP_ORG_POST teop
		<where> 1=1
			<if test="employee_id!=null">
				and teop.emp_id=#{employee_id,jdbcType=NUMERIC}
			</if>
		</where>
		) a
		left join tab_organization_info tof on tof.id = a.bu_id
		left join tab_organization_info tof2 on tof2.id = a.branch_id
		left join Tp_Post tp on tp.id = a.post_id
	</select>

	<!-- 添加员工岗位信息 -->
	<insert id="addEmpPost" parameterType="java.util.Map">
		insert into TAB_EMP_ORG_POST
		(
		emp_id,
		bu_id,
		branch_id,
		post_id,
		create_user,
		status,
		create_time
		)
		values(
		#{emp_id,jdbcType=NUMERIC},
		#{bu_Id,jdbcType=NUMERIC},
		#{branch_Id,jdbcType=NUMERIC},
		#{post_Id,jdbcType=NUMERIC},
		#{create_user,jdbcType=NUMERIC},
		1,
		sysdate()
		)
	</insert>

	<!-- 禁用 启用员工岗位-->
	<update id="removeEmpPost" parameterType="long">
		UPDATE TAB_EMP_ORG_POST
		SET    status=abs(ifnull(status,0)-1)
		WHERE  id=#{id,jdbcType=NUMERIC}
	</update>


	<!-- 禁用 启用员工状态-->
	<update id="setStatus" parameterType="long">
		UPDATE tab_employee_info
		SET    status=abs(ifnull(status,0)-1)
		WHERE  id=#{id,jdbcType=NUMERIC}
	</update>
</mapper>