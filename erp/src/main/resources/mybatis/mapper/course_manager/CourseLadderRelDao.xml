<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.CourseLadderRelDao">
	
	<select id="selectForList" parameterType="Map" resultType="com.edu.erp.model.TCourseLadderRel">
		select a.*, b.course_name, 
			case when b.actual_people_count is null then null when b.actual_people_count>0 then 1 else 0 end as is_course_book
		from t_course_ladder_rel a 
		left join t_course b on a.course_id = b.id and b.status = 1
		where
			 a.course_ladder_id = #{course_ladder_id}
		order by b.course_no, a.id DESC
	</select>
	
	<insert id="insert" parameterType="com.edu.erp.model.TCourseLadderRel">
		insert into t_course_ladder_rel
			(
		    id,
		    course_id,
		    course_ladder_id
			)
		values
			(
		    seq_t_course_ladder_rel.nextval,
		   	#{course_id,jdbcType=NUMERIC},
		   	#{course_ladder_id,jdbcType=NUMERIC}
		  	)
	</insert>
	
	<!-- 查询已经存在的课程关系，用于判断课程是否已绑定阶梯  -->
	<select id="queryExistCourseRel" parameterType="Map" resultType="java.lang.Long">
		select t.course_id from t_course_ladder_rel t 
		where t.course_ladder_id not in (${courseLadderIds})
		and t.course_id in (${courseIds})
	</select>
	
	<delete id="delete" parameterType="Map">
		delete from t_course_ladder_rel t where t.id in (${ids})
	</delete>
	
	<!-- 根据课程阶梯Id删除  -->
	<delete id="deleteByCourseLadderId" parameterType="Map">
		delete from t_course_ladder_rel t where t.course_ladder_id in (${ids})
	</delete>
	
</mapper>