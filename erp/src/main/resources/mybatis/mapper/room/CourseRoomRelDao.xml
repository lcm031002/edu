<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.CourseRoomRelDao">

	<select id="selectForList" parameterType="map" resultType="com.edu.erp.model.TCourseRoomRel">
		select a.course_id, a.course_times as seq, a.id as course_scheduling_id, a.course_date, a.start_time,
		a.end_time, a.remark,
		b.id, b.room_id,
		c.room_code, c.room_name,
		d.course_no as course_code, d.course_name,
		branch.id as branch_id, branch.org_name as branch_name,
		tea.teacher_name, sub.name as subject_name, g.grade_name,
		b.video_no as "videoNo"
		from t_course_scheduling a
		left join t_course_room_rel b on b.course_id=a.course_id and b.seq=a.course_times
		left join t_room c on c.id=b.room_id
		left join t_course d on d.id=a.course_id
		left join tab_organization_info branch on branch.id = a.branch_id
		left join tab_teacher_info tea on a.teacher_id = tea.id
		left join tp_subject sub on a.subject_id = sub.id
		left join tab_data_grade g on a.grade_id = g.id
		where
		a.course_id = #{course_id} and a.valid_status = 1
		<if test="seq != null and seq > 0">
			and a.course_times = #{seq,jdbcType=NUMERIC}
		</if>
		order by a.course_times
	</select>

	<select id="selectById" parameterType="long" resultType="com.edu.erp.model.TCourseRoomRel">
		select a.course_id,
		 				a.course_times as seq,
		  			a.id as course_scheduling_id,
		   			a.course_date, a.start_time,
						a.end_time, a.remark,
						b.id, b.room_id,
						c.room_code, c.room_name,
						d.course_no as course_code, d.course_name,
						branch.id as branch_id, branch.org_name as branch_name,
						tea.teacher_name, sub.name as subject_name, g.grade_name
		from t_course_scheduling a
		left join t_course_room_rel b on b.course_id=a.course_id and b.seq=a.course_times
		left join t_room c on c.id=b.room_id
		left join t_course d on d.id=a.course_id
		left join tab_organization_info branch on branch.id = a.branch_id
		left join tab_teacher_info tea on a.teacher_id = tea.id
		left join tp_subject sub on a.subject_id = sub.id
		left join tab_data_grade g on a.grade_id = g.id
		where b.id = #{id}
	</select>

	<insert id="insert" parameterType="com.edu.erp.model.TCourseRoomRel">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE">
			select seq_t_course_room_rel.nextval as id from dual
		</selectKey>
		insert into t_course_room_rel
		(
		id,
		course_id,
		seq,
		room_id
		)
		values
		(
		#{id,jdbcType=NUMERIC},
		#{course_id,jdbcType=NUMERIC},
		#{seq,jdbcType=NUMERIC},
		#{room_id,jdbcType=NUMERIC}
		)
	</insert>

	<delete id="deleteById" parameterType="com.edu.erp.model.TCourseRoomRel">
		delete from t_course_room_rel where id = #{id}
	</delete>

	<delete id="deleteByCondition" parameterType="com.edu.erp.model.TCourseRoomRel">
		delete from t_course_room_rel where course_id = #{course_id} and seq = #{seq}
	</delete>

	<!-- 校验教室绑定时间冲突 -->
	<select id="checkTimeConflict" parameterType="Map" resultType="com.edu.erp.model.TCourseRoomRel">
		select a.course_id, a.course_times as seq, a.id as course_scheduling_id, a.course_date, a.start_time,
		a.end_time, a.remark,
		b.id, b.room_id,
		c.room_code, c.room_name,
		d.course_no as course_code, d.course_name,
		branch.id as branch_id, branch.org_name as branch_name,
		tea.teacher_name, sub.name as subject_name, g.grade_name
		from t_course_scheduling a
		inner join t_course_room_rel b on b.course_id=a.course_id and b.seq=a.course_times
		inner join t_room c on c.id=b.room_id
		left join t_course d on d.id=a.course_id
		left join tab_organization_info branch on branch.id = a.branch_id
		left join tab_teacher_info tea on a.teacher_id = tea.id
		left join tp_subject sub on a.subject_id = sub.id
		left join tab_data_grade g on a.grade_id = g.id
		where
		a.branch_id = #{branch_id}
		and a.valid_status = 1
		and c.id = #{room_id,jdbcType=NUMERIC}
		<if test="course_room_rel_id != null and course_room_rel_id > 0">
			and b.id not in (${course_room_rel_id})
		</if>
		and a.course_date = #{course_date}
		and (
		<![CDATA[ #{start_time} <= a.start_time and #{end_time} >= a.end_time
				or #{start_time} > a.start_time and #{start_time} < a.end_time
				or #{end_time} > a.start_time and #{end_time} < a.end_time
			]]> )
		and rownum = 1
		order by a.course_times
	</select>

	<select id="checkRoombind" parameterType="com.edu.erp.model.TCourseRoomRel" resultType="long">
		select room_id from t_course_room_rel where course_id=#{course_id} and seq=#{seq}
	</select>

	<update id="updateVideoNo" parameterType="com.edu.erp.model.TCourseRoomRel">
		update t_course_room_rel set
			video_no = #{videoNo,jdbcType=VARCHAR}
		where id = #{id, jdbcType=NUMERIC}
	</update>

    <select id="selectBindedList" parameterType="long" resultType="com.edu.erp.model.TCourseRoomRel">
        select a.course_id, a.course_times as seq, a.id as course_scheduling_id, a.course_date, a.start_time,
        a.end_time, a.remark,
        b.id, b.room_id,
        c.room_code, c.room_name,
        d.course_no as course_code, d.course_name,
        branch.id as branch_id, branch.org_name as branch_name,
        tea.teacher_name, sub.name as subject_name, g.grade_name
        from t_course_scheduling a
        join t_course_room_rel b on b.course_id=a.course_id and b.seq=a.course_times
        join t_room c on c.id=b.room_id
        left join t_course d on d.id=a.course_id
        left join tab_organization_info branch on branch.id = a.branch_id
        left join tab_teacher_info tea on a.teacher_id = tea.id
        left join tp_subject sub on a.subject_id = sub.id
        left join tab_data_grade g on a.grade_id = g.id
        where
        a.course_id = #{courseId} and a.valid_status = 1
        order by a.course_times
    </select>

	<select id="selectRoomId" resultType="long">
		select tcrl.room_id
			from t_course_room_rel tcrl
		 where tcrl.course_id = #{courseId}
			 and tcrl.seq = #{seq}
	</select>
</mapper>