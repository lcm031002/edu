<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.RoomArrangeDao">


    <select id="listOccupancyRoom" resultType="com.edu.erp.course_manager.business.RoomOccupancyInfo">
        select tr.id,
        tr.room_name roomName,
        tr.room_code roomCode,
        tr.room_num roomNum,
        oi.org_name branchName,
        to_date(to_char(cs.course_date),'yyyyMMdd') courseDate
        from t_course_scheduling cs
        join t_course_room_rel crr on crr.course_id = cs.course_id and cs.course_times = crr.seq
        join t_room tr on tr.id = crr.room_id
        join tab_organization_info oi on oi.id = tr.branch_id
        left join t_course tc on cs.course_id = tc.id
        left join tab_teacher_info ti_main on ti_main.id = tc.teacher_id
        where
        tr.status = 1
        and cs.course_date &gt;= #{startDateInNum,jdbcType=NUMERIC}
        and cs.course_date &lt;= #{endDateInNum,jdbcType=NUMERIC}
        and oi.parent_id = #{buId,jdbcType=NUMERIC}
        and not (cs.end_time &lt;=#{startTime,jdbcType=VARCHAR} or cs.start_time &gt;=#{endTime,jdbcType=VARCHAR})
        <if test="branchId != null and branchId != 0">
            and oi.id = #{branchId,jdbcType=NUMERIC}
        </if>
        <if test="roomName != null and roomName != ''">
            and (tr.room_name like '%' || #{roomName,jdbcType=VARCHAR} || '%' or tr.room_code like '%' || #{roomName,jdbcType=VARCHAR} ||'%')
        </if>
        <if test="teacherName != null and teacherName != ''">
            and (ti_main.teacher_name  like '%'|| #{teacherName,jdbcType=VARCHAR} || '%' or ti_main.encoding like '%' || #{teacherName,jdbcType=VARCHAR} || '%')
        </if>
        <if test="courseName != null and courseName != ''">
            and (tc.course_name  like '%' || #{courseName,jdbcType=VARCHAR} || '%' or tc.course_no like '%' || #{courseName,jdbcType=VARCHAR} || '%')
        </if>
        order by cs.course_date,cs.start_time
        <!-- group by tr.id,tr.room_name,tr.room_code,oi.org_name having count(1) = 1 + #{endDateInNum,jdbcType=NUMERIC}-#{startDateInNum,jdbcType=NUMERIC} -->
    </select>


    <!--<select id="getOccupancyRoomInfo" resultType="string">-->
        <!--select '教室：' || tr.room_name || '（' || tr.room_code  || '）已经被课程：' || tc.course_name || '('|| tc.course_no ||')的第' || cs.course_times || '次课占用'-->
        <!--from t_course_scheduling cs-->
        <!--join t_course_room_rel crr on crr.course_id = cs.course_id and cs.course_times = crr.seq-->
        <!--join t_room tr on tr.id = crr.room_id-->
        <!--join tab_organization_info oi on oi.id = tr.branch_id-->
        <!--left join t_course tc on cs.course_id = tc.id-->
        <!--left join tab_teacher_info ti_main on ti_main.id = tc.teacher_id-->
        <!--where-->
        <!--tr.status = 1-->
        <!--and cs.course_date = #{courseDateInNum,jdbcType=NUMERIC}-->
        <!--and tr.id = #{roomId,jdbcType=NUMERIC}-->
        <!--<if test="startTime != null and startTime != ''">-->
            <!--and cs.start_time &gt;=#{startTime,jdbcType=VARCHAR}-->
        <!--</if>-->
        <!--<if test="endTime != null and endTime != ''">-->
            <!--and cs.end_time &lt;=#{endTime,jdbcType=VARCHAR}-->
        <!--</if>-->
    <!--</select>-->


    <!-- select id="listIdleRoom" >

        select tr.id, tr.room_name, tr.room_code, oi.org_name
        from t_room tr
        join tab_organization_info oi
        on oi.id = tr.branch_id
        where
        oi.parent_id = #{buId,jdbcType=NUMERIC}
        <if test="branchId != null and branchId != 0">
            and oi.id = #{branchId,jdbcType=NUMERIC}
        </if>
        <if test="roomName != null and roomName != ''">
            and (tr.room_name like '%#{roomName,jdbcType=VARCHAR}%' or tr.room_code like '%#{roomName,jdbcType=VARCHAR}%')
        </if>
        and not exists (
            select 1
            from t_course_scheduling cs1
            join t_course_room_rel crr1
            on crr1.course_id = cs1.course_id
            and cs1.course_times = crr1.seq
            join t_room tr1
            on tr1.id = crr1.room_id
            join tab_organization_info oi1
            on oi1.id = tr1.branch_id
            where oi1.parent_id = 12
            and cs1.course_date &gt;= #{startDateInNum,jdbcType=NUMERIC}
            and cs1.course_date &lt;= #{endDateInNum,jdbcType=NUMERIC}
            <if test="startTime != null and startTime != ''">
                and cs1.start_time &gt;=#{startTime,jdbcType=VARCHAR}
            </if>
            <if test="endTime != null and endTime != ''">
                and cs1.end_time &lt;=#{endTime,jdbcType=VARCHAR}
            </if>
            and tr1.id = tr.id
        )

    </select -->

    <select id="listRoom" resultType="com.edu.erp.course_manager.business.RoomOccupancyInfo">
        select tr.id, tr.room_name roomName, tr.room_code roomCode, oi.org_name branchName,tr.room_num roomNum
        from t_room tr
        join tab_organization_info oi
        on oi.id = tr.branch_id
        where
        tr.status = 1
        and tr.bu_id = #{buId,jdbcType=NUMERIC}
        <if test="branchId != null and branchId != 0">
            and tr.branch_id = #{branchId,jdbcType=NUMERIC}
        </if>
        <if test="roomName != null and roomName != ''">
            and (tr.room_name like '%' || #{roomName,jdbcType=VARCHAR} || '%' or tr.room_code like '%' || #{roomName,jdbcType=VARCHAR} || '%')
        </if>
        order by tr.id
    </select>

    <select id="listDelayRoom" resultType="com.edu.erp.course_manager.business.RoomOccupancyInfo">
        select tr.id,
        tr.room_name roomName,
        tr.room_code roomCode,
        oi.org_name branchName,
        to_date(to_char(cs.course_date), 'yyyyMMdd') courseDate
        from t_course_scheduling cs
        join t_course_room_rel crr
        on crr.course_id = cs.course_id
        and cs.course_times = crr.seq
        join t_room tr
        on tr.id = crr.room_id
        join tab_organization_info oi
        on oi.id = cs.branch_id
        left join t_course tc
        on cs.course_id = tc.id
        left join tab_teacher_info ti_main
        on ti_main.id = tc.teacher_id
        where
        tr.id =0
        and tr.status = 1
        and oi.parent_id = #{buId,jdbcType=NUMERIC}
        <if test="branchId != null and branchId != 0">
            and oi.id = #{branchId,jdbcType=NUMERIC}
        </if>
        and cs.course_date &gt;= #{startDateInNum,jdbcType=NUMERIC}
        <if test="endDateInNum != null and endDateInNum != 0">
            and cs.course_date &lt;= #{endDateInNum,jdbcType=NUMERIC}
        </if>
        <if test="startTime != null and startTime != ''">
            and cs.start_time &gt;=#{startTime,jdbcType=VARCHAR}
        </if>
        <if test="endTime != null and endTime != ''">
            and cs.end_time &lt;=#{endTime,jdbcType=VARCHAR}
        </if>
        <if test="teacherName != null and teacherName != ''">
            and (ti_main.teacher_name  like '%' || #{teacherName,jdbcType=VARCHAR} || '%' or ti_main.encoding like '%' || #{teacherName,jdbcType=VARCHAR} ||'%')
        </if>
        <if test="courseName != null and courseName != ''">
            and (tc.course_name  like '%' || #{courseName,jdbcType=VARCHAR} || '%' or tc.course_no like '%' || #{courseName,jdbcType=VARCHAR} || '%')
        </if>
        order by cs.course_date,cs.start_time
    </select>

    <select id="listRoomSchedulingInfo" resultType="com.edu.erp.course_manager.business.RoomSchedulingInfo">
        select * from (
            select distinct
                tr.id roomId,
                crr.id courseTimeRoomRef,
                cs.branch_id branchId,
                cs.id schedulingId,
                to_date(to_char(cs.course_date), 'yyyyMMdd') courseDate,
                cs.start_time startTime,
                cs.end_time endTime,
                cs.course_times courseTime,
                tr.room_name roomName,
                tc.id courseId,
                tc.course_name courseName,
                ti_cn.teacher_name chineseTeacherName,
                ti_en.teacher_name foreignTeacherName,
                oi.org_name branchName,
                ti_main.teacher_name teacherName,
                ti_assist.teacher_name assistTeacherName
               from t_course_scheduling cs
                join t_course_room_rel crr on crr.course_id = cs.course_id and cs.course_times = crr.seq
                join t_room tr on tr.id = crr.room_id
                left join t_course tc on cs.course_id = tc.id
                left join tab_organization_info oi on oi.id = tc.branch_id
                left join tab_teacher_info ti_main on ti_main.id = tc.teacher_id
                left join t_course_scheduling_assist csa_cn on csa_cn.course_id = tc.id and csa_cn.course_key='course_tearcher_cn'
                left join tab_teacher_info ti_cn on ti_cn.id = csa_cn.course_val
                left join t_course_scheduling_assist csa_en on csa_en.course_id = tc.id and csa_en.course_key='course_tearcher_en'
                left join tab_teacher_info ti_assist on tc.assteacher_id = ti_assist.id
                left join tab_teacher_info ti_en on ti_en.id = csa_en.course_val
                where
                tr.status = 1 and tc.status !=0
                and cs.course_date &gt;= #{startDate,jdbcType=NUMERIC}
                and cs.course_date &lt;= #{endDate,jdbcType=NUMERIC}
                and tr.id = #{roomId,jdbcType=NUMERIC}
        ) order by courseDate,startTime
    </select>

    <select id="listStudentOfCourse" resultType="com.edu.erp.model.StudentInfo" parameterType="long">
        select distinct si.id, si.encoding, si.student_name, si.student_status
          from t_course tc
          join t_order_course oc
            on oc.course_id = tc.id
          join t_order o
            on o.id = oc.order_id
           and o.order_status = 1
          join tab_student_info si
            on o.student_id = si.id
         where tc.id = #{courseId,jdbcType=NUMERIC}
    </select>

    <select id="listRoomSchedulingInfoByDateAndRooms" parameterType="list" resultType="com.edu.erp.course_manager.business.RoomSchedulingInfo">
        select * from (
        select distinct
        tr.id roomId,
        cs.branch_id branchId,
        cs.id schedulingId,
        to_date(to_char(cs.course_date), 'yyyyMMdd') courseDate,
        cs.start_time startTime,
        cs.end_time endTime,
        cs.course_times courseTime,
        tr.room_name roomName,
        tc.id courseId,
        tc.course_name courseName,
        ti_cn.teacher_name chineseTeacherName,
        ti_en.teacher_name foreignTeacherName,
        oi.org_name branchName,
        ti_main.teacher_name teacherName,
        ti_assist.teacher_name assistTeacherName
        from t_course_scheduling cs
        join t_course_room_rel crr on crr.course_id = cs.course_id and cs.course_times = crr.seq
        join t_room tr on tr.id = crr.room_id
        left join t_course tc on cs.course_id = tc.id
        left join tab_organization_info oi on oi.id = tc.branch_id
        left join tab_teacher_info ti_main on ti_main.id = tc.teacher_id
        left join t_course_scheduling_assist csa_cn on csa_cn.course_id = tc.id and
        csa_cn.course_key='course_tearcher_cn'
        left join tab_teacher_info ti_cn on ti_cn.id = csa_cn.course_val
        left join t_course_scheduling_assist csa_en on csa_en.course_id = tc.id and
        csa_en.course_key='course_tearcher_en'
        left join tab_teacher_info ti_assist on tc.assteacher_id = ti_assist.id
        left join tab_teacher_info ti_en on ti_en.id = csa_en.course_val
        where
        tr.status = 1 and tc.status != 0
        <foreach collection="qos" item="qo" open="and(" close=")" separator="or">
            (cs.course_date = #{qo.courseDate,jdbcType=NUMERIC} and tr.id in (${qo.roomIds}))
        </foreach>
        ) order by courseDate asc,roomName,startTime asc,endTime asc
    </select>

    <select id="listCourseStudentRelationships" resultType="com.edu.erp.course_manager.business.CourseStudentRelationship" parameterType="string">
        select distinct
        tc.id courseId,
        si.id studentId,
        si.encoding studentEncoding,
        si.student_name studentName,
        si.student_status studentStatus
        from t_course tc
        join t_order_course oc
        on oc.course_id = tc.id
        join t_order o
        on o.id = oc.order_id
        and o.order_status = 1
        join tab_student_info si
        on o.student_id = si.id
        where tc.id in (${courseIds})
    </select>
</mapper>


