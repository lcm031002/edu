<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.StudentManagerDao">
	<select id="queryBuAnalysis" parameterType="map" resultType="com.edu.erp.model.StudentManagerAnalysis">
		select vsmr.bu_id as buId,
				max(vsmr.bu_name) as buName,
				count(distinct vsmr.student_id) as studentCount,
				sum(vsmr.attendance_count) as attendanceCount,
				sum(vsmr.surplus_count) as surplusCount,
				sum(vsmr.schedule_count) as scheduleCount
		  from vw_student_manager_report vsmr
		 where vsmr.bu_id = #{bu_id}
		 <if test="branchId != null">
			 and vsmr.branch_id = #{branch_id}
		 </if>
		 <if test="studentManagerId != null">
			 and vsmr.student_manager_id = #{studentManagerId}
		 </if>
		 <if test="start_date != null">
			 and vsmr.course_date &gt;= to_date(#{start_date}, 'yyyy-MM-dd')
		 </if>
		 <if test="end_date != null">
			 and vsmr.course_date &lt; to_date(#{end_date}, 'yyyy-MM-dd') + 1
		 </if>
		 group by vsmr.bu_id
	</select>

	<select id="queryBranchAnalysis" parameterType="map" resultType="com.edu.erp.model.StudentManagerAnalysis">
		select vsmr.bu_id as buId,
				max(vsmr.bu_name) as buName,
				vsmr.branch_id as branchId,
				max(vsmr.branch_name) as branchName,
				count(distinct vsmr.student_id) as studentCount,
				sum(vsmr.attendance_count) as attendanceCount,
				sum(vsmr.surplus_count) as surplusCount,
				sum(vsmr.schedule_count) as scheduleCount
		 from vw_student_manager_report vsmr
		 left join ebs_accountorg_rel ear
		   on ear.orgid = vsmr.branch_id
		where vsmr.bu_id = #{bu_id}
		  and ear.accountid = #{userId}
		<if test="branch_id != null">
			and ear.orgid = #{branch_id}
		</if>
		<if test="studentManagerId != null">
			and vsmr.student_manager_id = #{studentManagerId}
		</if>
		<if test="start_date != null">
			and vsmr.course_date &gt;= to_date(#{start_date}, 'yyyy-MM-dd')
		</if>
		<if test="end_date != null">
			and vsmr.course_date &lt; to_date(#{end_date}, 'yyyy-MM-dd') + 1
		</if>
		group by vsmr.bu_id, vsmr.branch_id
	</select>

	<select id="queryStuMgrAnalysis" parameterType="map" resultType="com.edu.erp.model.StudentManagerAnalysis">
		select vsmr.bu_id as buId,
			    max(vsmr.bu_name) as buName,
				  vsmr.branch_id as branchId,
			    max(vsmr.branch_name) as branchName,
			    count(distinct vsmr.student_id) as studentCount,
				  vsmr.student_manager_id as studentManagerId,
			    max(vsmr.student_manager) as studentManager,
			    sum(vsmr.attendance_count) as attendanceCount,
			    sum(vsmr.surplus_count) as surplusCount,
			    sum(vsmr.schedule_count) as scheduleCount
		  from vw_student_manager_report vsmr
			left join ebs_accountorg_rel ear
			  on ear.orgid = vsmr.branch_id
		 where vsmr.bu_id = #{bu_id}
		   and ear.accountid = #{userId}
		   and ear.orgid = #{branch_id}
		<if test="studentManagerId != null">
			and vsmr.student_manager_id = #{studentManagerId}
		</if>
		<if test="start_date != null">
			and vsmr.course_date &gt;= to_date(#{start_date}, 'yyyy-MM-dd')
		</if>
		<if test="end_date != null">
			and vsmr.course_date &lt; to_date(#{end_date}, 'yyyy-MM-dd') + 1
		</if>
		 group by vsmr.bu_id, vsmr.branch_id, vsmr.student_manager_id
	</select>

	<select id="queryStudentAnalysis" parameterType="map" resultType="com.edu.erp.model.StudentManagerAnalysis">
		select vsmr.bu_id as buId,
			    max(vsmr.bu_name) as buName,
				  vsmr.branch_id as branchId,
			    max(vsmr.branch_name) as branchName,
				  vsmr.student_id as studentId,
			    max(vsmr.student_encoding) as studentEncoding,
			    max(vsmr.student_name) as studentName,
				  vsmr.student_manager_id as studentManagerId,
			    max(vsmr.student_manager) as studentManager,
			    sum(vsmr.attendance_count) as attendanceCount,
			    sum(vsmr.surplus_count) as surplusCount,
			    sum(vsmr.schedule_count) as scheduleCount
		  from vw_student_manager_report vsmr
			left join ebs_accountorg_rel ear
			  on ear.orgid = vsmr.branch_id
		 where vsmr.bu_id = #{bu_id}
		   and ear.accountid = #{userId}
		   and ear.orgid = #{branch_id}
		   and vsmr.student_manager_id = #{studentManagerId}
		<if test="start_date != null">
			and vsmr.course_date &gt;= to_date(#{start_date}, 'yyyy-MM-dd')
		</if>
		<if test="end_date != null">
			and vsmr.course_date &lt; to_date(#{end_date}, 'yyyy-MM-dd') + 1
		</if>
		 group by vsmr.bu_id, vsmr.branch_id, vsmr.student_manager_id, vsmr.student_id
	</select>

	<select id="queryYdyCourseSchedInfo" parameterType="map" resultType="map">
		select tatt.attend_branch_id as "branchId",
					 toi.org_name as "branchName",
					 tatt.counselor_id as "counselorId",
					 tei.employee_name as "counselorName",
					 tatt.student_id as "studentId",
					 tsi.student_name as "studentName",
					 tsi.encoding as "studentEncoding",
					 tcou.grade_id as "gradeId",
					 tdg.grade_name as "gradeName",
					 nvl(tatt.subject_id, tcou.subject_id) as "subjectId",
					 ts.name as "subjectName",
					 to_char(to_date(tatt.course_date, 'yyyyMMdd'), 'yyyy-MM-dd') as "courseDate",
					 tatt.start_time as "startTime",
					 tatt.end_time as "endTime",
					 tcou.course_name as "courseName",
					 round((to_date(tatt.end_time, 'hh24:mi') -
					 to_date(tatt.start_time, 'hh24:mi')) * 24 * 60 / tcou.hour_len, 0) as "hourLen",
					 nvl(tatt.teacher_id, tcou.teacher_id) as "teacherId",
					 tti.teacher_name as "teacherName",
					 tti.encoding as "teacherEncoding",
					 tatt.attend_type as "attendType",
					 tat.name as "attendTypeName",
					 tatt.sub_attend_type as "subAttendType",
					 vdd.name as "subAttendTypeName",
					 tatt.encoding as "attendEncoding",
		       to_char(tatt.create_time, 'yyyy-MM-dd HH24:mi:ss') as "createTime"
			from t_attendance tatt
			left join t_order_course toco
				on toco.id = tatt.order_course_id
		  left join t_order tord
		    on tord.id = toco.order_id
			left join t_course tcou
				on tcou.id = toco.course_id
			left join tab_organization_info toi
				on toi.id = tatt.attend_branch_id
			left join tab_employee_info tei
				on tei.id = tatt.counselor_id
			left join tab_student_info tsi
				on tsi.id = tatt.student_id
			left join tab_data_grade tdg
				on tdg.id = tsi.grade_id
			left join tp_subject ts
				on ts.id = nvl(tatt.subject_id, tcou.subject_id)
			left join tab_teacher_info tti
				on tti.id = nvl(tatt.teacher_id, tcou.teacher_id)
			left join tp_attend_type tat
				on tat.id = tatt.attend_type
			left join vt_dict_data vdd
				on vdd.typeCode = 'ydyAttendType'
			 and vdd.code = tatt.sub_attend_type
		  left join ebs_accountorg_rel ear
		    on ear.orgid = tatt.attend_branch_id
		 where tord.business_type = 2
		   and toi.parent_id = #{buId}
		   and ear.accountid = #{userId}
			 and tatt.course_date between #{startDate} and #{endDate}
			 <if test="branchId != null">
				 and tatt.attend_branch_id = #{branchId}
			 </if>
			 <if test="counselorName != null and counselorName != ''">
				 and tei.employee_name like '%${counselorName}%'
			 </if>
		  <if test="attendType != null and attendType != ''">
				and tatt.attend_type = #{attendType}
			</if>
			<if test="subAttendType != null and subAttendType != ''">
				and tatt.sub_attend_type = #{subAttendType}
			</if>
			<if test="studentId != null">
				and tatt.student_id = #{studentId}
			</if>
		  order by tatt.attend_branch_id, tatt.counselor_id, tatt.student_id, tatt.course_date, tatt.start_time
	</select>

</mapper>