<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.TScheduleApplyInfoDao">
	<resultMap type="com.edu.erp.model.TScheduleApplyInfo" id="schedApplyInfoMap">
		<id property="id" column="id" />
		<result property="encoding" column="encoding" />
		<result property="applyType" column="applyType" />
		<result property="applyTypeName" column="applyTypeName" />
		<result property="beginDate" column="beginDate" />
		<result property="counselorId" column="counselorId" />
		<result property="counselor" column="counselor" />
		<result property="counselorPhone" column="counselorPhone" />
		<result property="counselorLine" column="counselorLine" />
		<result property="courseAdminId" column="courseAdminId" />
		<result property="courseAdmin" column="courseAdmin" />
		<result property="courseAdminPhone" column="courseAdminPhone" />
		<result property="courseAdminLine" column="courseAdminLine" />
		<result property="classPlace" column="classPlace" />
		<result property="branchEmail" column="branchEmail" />
		<result property="remark" column="remark" />
		<result property="studentRanking" column="studentRanking" />
		<result property="studentCharacter" column="studentCharacter" />
		<result property="parentInfo" column="parentInfo" />
		<result property="studentSituation" column="studentSituation" />
		<result property="teacherSpecification" column="teacherSpecification" />
		<result property="firstClassContent" column="firstClassContent" />
		<result property="changeTeacherReasons" column="changeTeacherReasons" />
		<result property="workDirections" column="workDirections" />
		<result property="workRemark" column="workRemark" />
		<result property="teachGroupId" column="teachGroupId" />
		<result property="teachGroup" column="teachGroup" />
		<result property="auditUserId" column="auditUserId" />
		<result property="auditUser" column="auditUser" />
		<result property="auditDate" column="auditDate" />
		<result property="auditStatus" column="auditStatus" />
		<result property="auditStatusName" column="auditStatusName" />
		<result property="studentId" column="studentId" />
		<result property="studentName" column="studentName" />
		<result property="studentEncoding" column="studentEncoding" />
		<result property="sexName" column="sexName" />
		<result property="schoolName" column="schoolName" />
		<result property="stuGradeName" column="stuGradeName" />
		<result property="branchId" column="branchId" />
		<result property="gradeId" column="gradeId" />
		<result property="gradeName" column="gradeName" />
		<result property="term" column="term" />
		<result property="examType" column="examType" />
		<result property="status" column="status" />
		<result property="statusName" column="statusName" />
		<result property="create_user" column="create_user" />
		<result property="create_user_name" column="create_user_name" />
		<result property="create_time" column="create_time" />
		<result property="update_user" column="update_user" />
		<result property="update_user_name" column="update_user_name" />
		<result property="update_time" column="update_time" />
		<result property="schedule" column="schedule" />
		<result property="rejectReason" column="rejectReason" />
		<result property="courseArranger" column="courseArranger" />
		
		<collection property="stuScoreList" javaType="ArrayList"
			 ofType="com.edu.erp.model.TStudentScore">
			<id property="id" column="tssId" />
			<result property="applyId" column="tssApplyId" />
			<result property="subjectId" column="tssSubjectId" />
			<result property="subjectName" column="tssSubjectName" />
			<result property="score" column="tssScore" />
			<result property="fullMark" column="tssFullMark" />
		</collection>
		
		<collection property="stuReqList" javaType="ArrayList"
			 ofType="com.edu.erp.model.TStudentRequirement">
			<id property="id" column="tsrId" />
			<result property="applyId" column="tsrApplyId" />
			<result property="subjectId" column="tsrSubjectId" />
			<result property="subjectName" column="tsrSubjectName" />
			<result property="requirement" column="tsrRequirement" />
			<result property="seq" column="tsrSeq" />
			<result property="teachGroupId" column="tsrTeachGroupId" />
			<result property="teachGroupName" column="tsrteachGroupName" />
		</collection>
	</resultMap>

	<select id="queryForPage" parameterType="map"
		resultType="com.edu.erp.model.TScheduleApplyInfo">
		select tsai.id,
		       tsai.encoding,
		       tsai.apply_type as applyType,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'schedApplyType'
		           and vdd.code = tsai.apply_type) as applyTypeName,
		       tsai.begin_date as beginDate,
		       tsai.counselor_id as counselorId,
		       tsai.counselor,
		       tsai.counselor_phone as counselorPhone,
		       tsai.counselor_line as counselorLine,
		       tsai.course_admin_id as courseAdminId,
		       tsai.course_admin as courseAdmin,
		       tsai.course_admin_phone as courseAdminPhone,
		       tsai.course_admin_line as courseAdminLine,
		       tsai.class_place as classPlace,
		       tsai.branch_email as branchEmail,
		       tsai.remark,
		       tsai.student_ranking as studentRanking,
		       tsai.student_character as studentCharacter,
		       tsai.parent_info as parentInfo,
		       tsai.student_situation as studentSituation,
		       tsai.teacher_specification as teacherSpecification,
		       tsai.first_class_content as firstClassContent,
		       tsai.change_teacher_reasons as changeTeacherReasons,
		       tsai.work_directions as workDirections,
		       tsai.work_remark as workRemark,
		       tsai.teach_group_id as teachGroupId,
		       tti.teacher_name as teachGroup,
		       tsai.audit_user_id as auditUserId,
		       tsai.reject_reason as rejectReason,
		       (select vue.employee_name
		          from vt_user_emp vue
		         where vue.user_id = tsai.audit_user_id) as auditUser,
		       tsai.audit_date as auditDate,
		       tsai.audit_status as auditStatus,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'schedApplyAuditStatus'
		           and vdd.code = tsai.audit_status) as auditStatusName,
		       tsai.create_user,
		       creator.employee_name as create_user_name,
		       tsai.create_time,
		       tsai.update_user,
		       updater.employee_name as update_user_name,
		       tsai.update_time,
		       tsai.student_id as studentId,
		       tsi.student_name as studentName,
					 tsi.encoding as studentEncoding,
		       tsai.branch_id as branchId,
		       tsai.grade_id as gradeId,
		       tdg.grade_name as gradeName,
		       stdg.grade_name as stuGradeName,
		       tsai.term,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'term'
		           and vdd.code = tsai.term) as termName,
		       tsai.exam_type as examType,
		       tsai.status,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'schedApplyStatus'
		           and vdd.code = to_char(tsai.status)) as statusName,
						tsr.subject_id as schedulableSubjectId,
		        tsr.subject_name as schedulableSubjectName,
		       (select wm_concat(tsr.subject_name)
		          from t_student_requirement tsr
		         where tsr.apply_id = tsai.id) as subjectName,
		       (select sum(tsr.requirement)
		          from t_student_requirement tsr
		         where tsr.apply_id = tsai.id) as times,
		       nvl(tcas.employee_id, vcas.employee_id) as courseArrangerEmpId,
					 nvl(tcas.employee_name, vcas.employee_name) as courseArranger
		  from t_schedule_apply_info tsai
		  left join tab_student_info tsi
		    on tsai.student_id = tsi.id
		  left join tab_data_grade tdg
		    on tsai.grade_id = tdg.id
		  left join tab_data_grade stdg
				on tsi.grade_id = stdg.id
		  left join tab_teacher_info tti
		    on tsai.teach_group_id = tti.id
		  left join vt_user_emp creator
		    on creator.user_id = tsai.create_user
		  left join vt_user_emp updater
		    on updater.user_id = tsai.update_user
		  left join tab_organization_info toi
    		on toi.id = tsai.branch_id
		  left join t_course_arrange_specialist tcas
		    on tcas.id = tsai.course_arranger_id
			left join (select tsr.subject_id, tsr.subject_name, tsr.apply_id, tsr1.status
				from t_student_requirement tsr,
					(select tsr.apply_id, min(tsr.seq) as seq, tssp.status
						from t_student_requirement   tsr,
						    t_student_schedule_plan tssp
						where tssp.apply_id = tsr.apply_id
						and tssp.subject_id = tsr.subject_id
						and tssp.status in (1, 3) <!-- 只查询待匹配及压单的科目信息 -->
						group by tsr.apply_id, tssp.status) tsr1
				where tsr.apply_id = tsr1.apply_id
				  and tsr.seq = tsr1.seq) tsr
				on tsr.apply_id = tsai.id
		   and tsr.status = decode(tsai.status, 4, 3, 1) <!-- 排课申请状态为“有压单”时，匹配状态为“压单”的排课科目信息，否则匹配状态为“待匹配”的排课科目信息 -->
			left join vt_course_arranger_sp vcas
				 on vcas.grade_id = tsi.grade_id
				and vcas.subject_id = tsr.subject_id
		    and vcas.bu_id = toi.parent_id
		  where 1 = 1
		 <if test="beginDateFrom != null and beginDateFrom != ''">
		 	and tsai.begin_date &gt;= to_date(#{beginDateFrom}, 'yyyy-MM-dd')
		 </if>
		 <if test="beginDateTo != null and beginDateTo != ''">
		 	and tsai.begin_date &lt;= to_date(#{beginDateTo}, 'yyyy-MM-dd')
		 </if>
		 <if test="buId != null and buId !=''">
		 	and toi.parent_id = #{buId}
		 </if>
		 <if test="branchId != null and branchId !='' ">
		 	and tsai.branch_id = #{branchId}
		 </if>
		 <if test="applyType != null and applyType != ''">
			 and tsai.apply_type = #{applyType}
		 </if>
		 <!-- 排课申请列表，查询状态为草稿和已提交的申请单 1：已提交 5：草稿 -->
		 <if test="type == 'apply'">
		 <!--	and tsai.status in (1, 5) -->
		 </if>
		 <!-- 排课匹配列表，查询状态为已提交的新单、加单或者审核通过的换单申请单 -->
		 <if test="type == 'match'">
		 	and (tsai.status in(1,2,3,4)  and (tsai.apply_type in (1, 2) or (tsai.apply_type = 3 and tsai.audit_status = 1)))
		 </if>
		 <!-- 排课审批列表，查询状态为已提交的换单申请单 -->
		 <if test="type == 'audit'">
		 	and tsai.apply_type = 3
		 	and tsai.status = 1
		 	and nvl(tsai.audit_status, 3) = 3
		 </if>
		 <!-- 排课处理列表，查询状态为已匹配的申请单 -->
		 <if test="type == 'handle'">
		 	and tsai.status in (3, 4)
		 </if>
		 <if test="auditStatus != null">
		 	and tsai.audit_status = #{auditStatus}
		 </if>
		 <if test="status != null">
			and tsai.status = #{status}
		 </if>
		 <if test="subjectId != null">
			 and exists (select 1
				 from t_student_schedule_plan tssp
				 where tssp.status = 1
				   and tssp.apply_id = tsai.id
				   and tssp.subject_id = #{subjectId})
		 </if>
		 <if test="encoding != null and encoding != ''">
				 and tsai.encoding = #{encoding}
		 </if>
		 <if test="studentId != null">
				 and tsai.student_id = #{studentId}
		 </if>
		 <if test="studentName != null and studentName != ''">
			 and tsi.student_name like '%${studentName}%'
		 </if>
		 <if test="courseAdminId != null">
				 and tsai.course_admin_id = #{courseAdminId}
		 </if>
		 <if test="courseAdmin != null and courseAdmin != ''">
			 and tsai.course_admin like '%${courseAdmin}%'
		 </if>
		 <if test="employeeId != null and type == 'apply'">
			 and creator.employee_id = #{employeeId}
		 </if>
		 <if test="employeeId != null and type == 'handle'">
			and tsai.course_admin_id = #{employeeId}
		 </if>
		<if test="employeeId != null and type == 'audit'">
			<!-- 排课审批查询，根据教研组长过滤换单申请 -->
			and exists (select 1
				from t_student_requirement tsre, tab_teach_lead ttl
				where tsre.teach_group_id = ttl.teach_group_id
			    and tsre.apply_id = tsai.id
				  and ttl.employee_id = #{employeeId})
		</if>
		 <!-- 排课专员过滤 -->
		 <if test="courseArrangerId != null">
			 and nvl(tsai.course_arranger_id, vcas.id) = #{courseArrangerId}
		 </if>
		 <if test="curEmployeeId != null">
			 and nvl(tcas.employee_id, vcas.employee_id) = #{curEmployeeId}
		 </if>
		 order by tsai.begin_date, nvl(tsai.create_time, tsai.update_time) desc
	</select>
	
	<select id="queryDetail" parameterType="map" resultMap="schedApplyInfoMap">
		select tsai.id,
		       tsai.encoding,
		       tsai.apply_type as applyType,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'schedApplyType'
		           and vdd.code = tsai.apply_type) as applyTypeName,
		       tsai.begin_date as beginDate,
		       tsai.counselor_id as counselorId,
		       tsai.counselor,
		       tsai.counselor_phone as counselorPhone,
		       tsai.counselor_line as counselorLine,
		       tsai.course_admin_id as courseAdminId,
		       tsai.course_admin as courseAdmin,
		       tsai.course_admin_phone as courseAdminPhone,
		       tsai.course_admin_line as courseAdminLine,
		       tsai.class_place as classPlace,
		       tsai.branch_email as branchEmail,
		       tsai.remark,
		       tsai.student_ranking as studentRanking,
		       tsai.student_character as studentCharacter,
		       tsai.parent_info as parentInfo,
		       tsai.student_situation as studentSituation,
		       tsai.teacher_specification as teacherSpecification,
		       tsai.first_class_content as firstClassContent,
		       tsai.change_teacher_reasons as changeTeacherReasons,
		       tsai.work_directions as workDirections,
		       tsai.work_remark as workRemark,
		       tsai.teach_group_id as teachGroupId,
		       tag.teach_group_name as tsrteachGroupName,
		       tti.teacher_name as teachGroup,
		       tsai.audit_user_id as auditUserId,
		       tsai.reject_reason as rejectReason,
		       (select vue.employee_name
		          from vt_user_emp vue
		         where vue.user_id = tsai.audit_user_id) as auditUser,
		       tsai.audit_date as auditDate,
		       tsai.audit_status as auditStatus,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'schedApplyAuditStatus'
		           and vdd.code = tsai.audit_status) as auditStatusName,
		       tcas.employee_name as courseArranger,
		       tsai.create_user,
		       (select vue.employee_name
		          from vt_user_emp vue
		         where vue.user_id = tsai.create_user) as create_user_name,
		       tsai.create_time,
		       tsai.update_user,
		       (select vue.employee_name
		          from vt_user_emp vue
		         where vue.user_id = tsai.update_user) as update_user_name,
		       tsai.update_time,
		       tsai.student_id as studentId,
		       tsi.student_name as studentName,
		       tsi.encoding as studentEncoding,
		       vdd.name as sexName,
		       tds.school_name as schoolName,
		       stdg.grade_name as stuGradeName,
		       tsai.branch_id as branchId,
		       tsai.grade_id as gradeId,
		       tdg.grade_name as gradeName,
		       tsai.term,
		       tsai.exam_type as examType,
		       tsai.status,
		       (select vdd.name
		          from vt_dict_data vdd
		         where vdd.typeCode = 'schedApplyStatus'
		           and vdd.code = to_char(tsai.status)) as statusName,
		       (select schedule from t_student_schedule tssc where tssc.apply_id = tsai.id and rownum = 1) as schedule,
		       tss.id as tssId,
		       tss.apply_id as tssApplyId,
		       tss.subject_id as tssSubjectId,
		       tss.subject_name as tssSubjectName,
		       tss.score as tssScore,
		       tss.full_mark as tssFullMark,
		       tsr.id as tsrId,
		       tsr.apply_id as tsrApplyId,
		       tsr.subject_id as tsrSubjectId,
		       tsr.subject_name as tsrSubjectName,
		       tsr.requirement as tsrRequirement,
		       tsr.teach_group_id as tsrTeachGroupId,
		       tsr.seq as tsrSeq
		  from t_schedule_apply_info tsai
		  left join t_student_score tss
		    on tss.apply_id = tsai.id
		  left join t_student_requirement tsr
		    on tsr.apply_id = tsai.id
		  left join tab_teach_group tag
            on tsr.teach_group_id = tag.id
		  left join tab_student_info tsi
		    on tsai.student_id = tsi.id
		  left join tab_data_school tds
		    on tsi.attend_school_id = tds.id
		  left join tab_data_grade stdg
		    on tsi.grade_id = stdg.id
		  left join vt_dict_data vdd
		    on vdd.typeCode = 'gender'
		   and to_char(tsi.sex) = vdd.code
		  left join tab_data_grade tdg
		    on tsai.grade_id = tdg.id
		  left join tab_teacher_info tti
		    on tsai.teach_group_id = tti.id
		  left join t_course_arrange_specialist tcas
		    on tcas.id = tsai.course_arranger_id
		 where tsai.id = #{id}
	</select>

	<!-- 查询最后一次完成的排课申请记录 排课申请状态：0-已取消 3-已完成 4-有压单都算申请完成 -->
	<select id="queryLatestApply" parameterType="com.edu.erp.model.TScheduleApplyInfo" resultType="com.edu.erp.model.TScheduleApplyInfo">
		select id,
					 encoding,
					 applyType,
					 beginDate,
					 counselorId,
					 counselor,
					 counselorPhone,
					 counselorLine,
					 courseAdminId,
					 courseAdmin,
					 courseAdminPhone,
					 courseAdminLine,
					 classPlace,
					 branchEmail,
					 remark,
					 studentRanking,
					 studentCharacter,
					 parentInfo,
					 studentSituation,
					 teacherSpecification,
					 firstClassContent,
					 changeTeacherReasons,
					 workDirections,
					 workRemark
			from (select tsai.id,
									 tsai.encoding,
									 tsai.apply_type             as applyType,
									 tsai.begin_date             as beginDate,
									 tsai.counselor_id           as counselorId,
									 tsai.counselor,
									 tsai.counselor_phone        as counselorPhone,
									 tsai.counselor_line         as counselorLine,
									 tsai.course_admin_id        as courseAdminId,
									 tsai.course_admin           as courseAdmin,
									 tsai.course_admin_phone     as courseAdminPhone,
									 tsai.course_admin_line      as courseAdminLine,
									 tsai.class_place            as classPlace,
									 tsai.branch_email           as branchEmail,
									 tsai.remark,
									 tsai.student_ranking        as studentRanking,
									 tsai.student_character      as studentCharacter,
									 tsai.parent_info            as parentInfo,
									 tsai.student_situation      as studentSituation,
									 tsai.teacher_specification  as teacherSpecification,
									 tsai.first_class_content    as firstClassContent,
									 tsai.change_teacher_reasons as changeTeacherReasons,
									 tsai.work_directions        as workDirections,
									 tsai.work_remark            as workRemark
							from t_schedule_apply_info tsai
						 where status in (0, 3, 4)
							 and tsai.student_id = #{studentId}
							 and tsai.create_user = #{create_user}
						 order by tsai.create_time desc)
		 where rownum = 1
	</select>


	<select id="queryById" parameterType="java.lang.Long" resultType="com.edu.erp.model.TScheduleApplyInfo">
		select tsai.id,
		       tsai.encoding,
		       tsai.apply_type as applyType,
		       tsai.begin_date as beginDate,
		       tsai.counselor_id as counselorId,
		       tsai.counselor,
		       tsai.counselor_phone as counselorPhone,
		       tsai.counselor_line as counselorLine,
		       tsai.course_admin_id as courseAdminId,
		       tsai.course_admin as courseAdmin,
		       tsai.course_admin_phone as courseAdminPhone,
		       tsai.course_admin_line as courseAdminLine,
		       tsai.class_place as classPlace,
		       nvl(tsai.branch_email, toi.email) as branchEmail,
		       tsai.remark,
		       tsai.student_ranking as studentRanking,
		       tsai.student_character as studentCharacter,
		       tsai.parent_info as parentInfo,
		       tsai.student_situation as studentSituation,
		       tsai.teacher_specification as teacherSpecification,
		       tsai.first_class_content as firstClassContent,
		       tsai.change_teacher_reasons as changeTeacherReasons,
		       tsai.work_directions as workDirections,
		       tsai.work_remark as workRemark,
		       tsai.teach_group_id as teachGroupId,
		       tti.teacher_name as teachGroup,
		       tsai.audit_user_id as auditUserId,
		       tsai.audit_date as auditDate,
		       tsai.audit_status as auditStatus,
		       tsai.create_user,
		       tsai.create_time,
		       tsai.update_user,
		       tsai.update_time,
		       tsai.student_id as studentId,
		       tsi.student_name as studentName,
		       tsai.branch_id as branchId,
		       tsai.grade_id as gradeId,
		       tdg.grade_name as gradeName,
		       tsai.term,
		       tsai.exam_type as examType,
		       tsai.status
		  from t_schedule_apply_info tsai
		  left join tab_student_info tsi
		    on tsai.student_id = tsi.id
		  left join tab_data_grade tdg
		    on tsai.grade_id = tdg.id
		  left join tab_teacher_info tti
		    on tsai.teach_group_id = tti.id
		  left join tab_organization_info toi
		    on toi.id = tsai.branch_id
		 where tsai.id = #{id}
	</select>

	<insert id="save" parameterType="com.edu.erp.model.TScheduleApplyInfo">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="BEFORE">
			select seq_t_schedule_apply_info.nextval as id from dual
		</selectKey>
		insert into t_schedule_apply_info
		(id,
		encoding,
		begin_date,
		counselor_id,
		counselor,
		counselor_phone,
		counselor_line,
		course_admin_id,
		course_admin,
		course_admin_phone,
		course_admin_line,
		student_id,
		branch_id,
		branch_email,
    class_place,
		grade_id,
		status,
		student_character,
		parent_info,
		student_situation,
		work_directions,
		work_remark,
		create_user,
		create_time
		)
		select #{id, jdbcType=NUMERIC},
				#{encoding, jdbcType=VARCHAR},
				#{beginDate, jdbcType=DATE},
				#{counselorId, jdbcType=NUMERIC},
				#{counselor, jdbcType=VARCHAR},
				#{counselorPhone, jdbcType=VARCHAR},
				#{counselorLine, jdbcType=VARCHAR},
				#{courseAdminId, jdbcType=NUMERIC},
				#{courseAdmin, jdbcType=VARCHAR},
				#{courseAdminPhone, jdbcType=VARCHAR},
				#{courseAdminLine, jdbcType=VARCHAR},
				#{studentId, jdbcType=NUMERIC},
				tsi.branch_id,
		    toi.email,
        toi.org_name,
				tsi.grade_id,
				#{status, jdbcType=VARCHAR},
		    #{studentCharacter, jdbcType=VARCHAR},
				#{parentInfo, jdbcType=VARCHAR},
				#{studentSituation, jdbcType=VARCHAR},
				#{workDirections, jdbcType=VARCHAR},
				#{workRemark, jdbcType=VARCHAR},
				#{create_user, jdbcType=NUMERIC},
				#{create_time, jdbcType=TIMESTAMP}
		 from tab_student_info tsi
        left join tab_organization_info toi
          on toi.id = tsi.branch_id
		where tsi.id = #{studentId, jdbcType=NUMERIC}
	</insert>
	
	<update id="update" parameterType="com.edu.erp.model.TScheduleApplyInfo">
		update t_schedule_apply_info set
		<if test="applyType != null and applyType != ''">
			apply_type = #{applyType, jdbcType=VARCHAR},
		</if>
		<if test="beginDate != null">
			begin_date = #{beginDate,jdbcType=DATE},
		</if>
		<if test="branchEmail != null and branchEmail != ''">
			branch_email = #{branchEmail, jdbcType=VARCHAR},
		</if>
		<if test="remark != null and remark != ''">
			remark = #{remark, jdbcType=VARCHAR},
		</if>
		<if test="studentRanking != null and studentRanking != ''">
			student_ranking = #{studentRanking, jdbcType=VARCHAR},
		</if>
		<if test="studentCharacter != null and studentCharacter != ''">
			student_character = #{studentCharacter, jdbcType=VARCHAR},
		</if>
		<if test="parentInfo != null and parentInfo != ''">
			parent_info = #{parentInfo, jdbcType=VARCHAR},
		</if>
		<if test="studentSituation != null and studentSituation != ''">
			student_situation = #{studentSituation, jdbcType=VARCHAR},
		</if>
		<if test="teacherSpecification != null and teacherSpecification != ''">
			teacher_specification = #{teacherSpecification, jdbcType=VARCHAR},
		</if>
		<if test="firstClassContent != null and firstClassContent != ''">
			first_class_content = #{firstClassContent, jdbcType=VARCHAR},
		</if>
		<if test="changeTeacherReasons != null and changeTeacherReasons != ''">
			change_teacher_reasons = #{changeTeacherReasons, jdbcType=VARCHAR},
		</if>
		<if test="workDirections != null and workDirections != ''">
			work_directions = #{workDirections, jdbcType=VARCHAR},
		</if>
		<if test="workRemark != null and workRemark != ''">
			work_remark = #{workRemark, jdbcType=VARCHAR},
		</if>
		<if test="teachGroupId != null">
			teach_group_id = #{teachGroupId, jdbcType=NUMERIC},
		</if>
		<if test="branchId != null">
			branch_id = #{branchId, jdbcType=NUMERIC},
            class_place = (select toi.org_name from tab_organization_info toi where toi.id = #{branchId, jdbcType=VARCHAR}),
		</if>
		<if test="term != null">
			term = #{term, jdbcType=VARCHAR},
		</if>
		<if test="examType != null">
			exam_type = #{examType, jdbcType=NUMERIC},
		</if>
		<if test="gradeId != null">
			grade_id = #{gradeId, jdbcType=NUMERIC},
		</if>
		<if test="status != null">
			status = #{status, jdbcType=NUMERIC},
		</if>
		<if test="status != null">
			audit_status = #{auditStatus, jdbcType=NUMERIC},
		</if>
			update_user = #{update_user, jdbcType=VARCHAR},
			update_time = #{update_time, jdbcType=TIMESTAMP}
		where id = #{id, jdbcType=NUMERIC}
	</update>
	
	<update id="updateStatus" parameterType="com.edu.erp.model.TScheduleApplyInfo">
		update t_schedule_apply_info set
			status = #{status, jdbcType=VARCHAR},
			update_user = #{update_user, jdbcType=VARCHAR},
			update_time = #{update_time, jdbcType=TIMESTAMP}
		where id = #{id, jdbcType=NUMERIC}
	</update>
	
	<!-- 排课申请教师匹配后，更新排课申请状态 -->
	<update id="updateStatusAfterMatch" parameterType="java.lang.Long">
		update t_schedule_apply_info set
			status = (select (case
									 when dpp.recordCount > 0 then <!-- 有待匹配排课记录，申请单状态置为匹配中 -->
										2
									 when yyd.recordCount > 0 then <!-- 没有待匹配且有压单排课记录，申请单状态置为有压单 -->
										4
									 else
										3
								 end)
						from (select count(0) recordCount
										from t_student_schedule_plan
									 where status = 1
										 and apply_id = #{id, jdbcType=NUMERIC}) dpp, <!-- 查询待匹配记录数 -->
								 (select count(0) recordCount
										from t_student_schedule_plan
									 where status = 3
										 and apply_id = #{id, jdbcType=NUMERIC}) yyd) <!-- 查询压单记录数 -->
		where id = #{id, jdbcType=NUMERIC}
	</update>
	
	<!-- 换单审批拒绝后，修改审批单状态 -->
	<update id="updateStatusAfterApplyReject" parameterType="java.lang.Long">
		update t_schedule_apply_info set status = 3
		where id = #{id, jdbcType=NUMERIC}
	</update>

	<update id="auditScheduleApply" parameterType="com.edu.erp.model.TScheduleApplyInfo">
		update t_schedule_apply_info t
			 set t.course_arranger_id = #{courseArrangerId, jdbcType=NUMERIC},
			     t.audit_user_id = #{auditUserId, jdbcType=NUMERIC},
					 t.audit_date    = #{auditDate, jdbcType=TIMESTAMP},
					 t.audit_status  = #{auditStatus, jdbcType=VARCHAR},
					 t.reject_reason = #{rejectReason, jdbcType=VARCHAR},
					 t.update_user   = #{update_user, jdbcType=VARCHAR},
					 t.update_time   = #{update_time, jdbcType=TIMESTAMP}
		 where t.id = #{id, jdbcType=NUMERIC}
	</update>
	
	<select id="queryCounselorInfo" parameterType="java.lang.Long" resultType="com.edu.erp.model.EmployeeInfo">
		select tei.id, tei.employee_name, tei.phone, tei.tel, tsci.counselor_type
		  from tab_student_counselor_info tsci, tab_employee_info tei
		 where tsci.counselor_id = tei.id
		   and tsci.is_valid = 1
		   and tsci.student_id = #{studentId, jdbcType=NUMERIC}
	</select>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from t_schedule_apply_info where id = #{id, jdbcType=NUMERIC}
	</delete>
	
	<!-- 判断学生是否存在未匹配完成订单 status：状态 1-已提交 2-匹配中 5-草稿 -->
	<select id="hasOtherApply" parameterType="java.lang.Long" resultType="java.lang.Integer">
		select count(0)
		  from t_schedule_apply_info
		 where status in (1, 2, 5)
		   and student_id = #{studentId, jdbcType=NUMERIC}
	</select>

</mapper>