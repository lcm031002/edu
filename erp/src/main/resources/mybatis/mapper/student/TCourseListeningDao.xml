<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.erp.dao.TCourseListeningDao">
	<!-- 查询学员试听的记录 -->
	<select id="queryListeningPage" parameterType="java.util.HashMap"  resultType="java.util.HashMap">
		select  		t1.*,
						t3.course_no,
						t3.course_name,
						t3.start_date,
						t3.end_date,
						t3.start_time,
						t3.end_time,
						t4.name subject_name,
						t5.course_season_name,
						t6.encoding,
						t6.teacher_name,
						t7.org_name branch_name,
						t8.username record_name,
						t9.grade_name
			from 		t_course_listening t1
		join			tab_student_info t2 on t1.student_id = t2.id
		join			t_course t3 on t1.course_id = t3.id
		left join		tp_subject t4 on t3.subject_id = t4.id
		left join		tab_time_season t5 on t3.season_id = t5.id and t5.status = 1
		left join 		tab_teacher_info t6 on t3.teacher_id = t6.id and t6.status = 1
		left join		tab_organization_info t7 on t3.branch_id = t7.id
		left join  		tab_user_info t8 on t8.id=t1.recorder 
		left join  tab_data_grade t9 on
		t3.grade_id = t9.id and t9.status = 1
		where			1 = 1
		<if test="student_id != null">
			and			t1.student_id = #{student_id}
		</if>		 
		<if test="branch_id != null">
			and			t1.branch_id = #{branch_id}
		</if>		 
		<if test="business_type != null">
			and			t3.business_type = #{business_type}
		</if>		 
		<if test="start_date != null and end_date != null">
			and			SUBSTR(t1.record_time, 0 , 10) between #{start_date} and #{end_date}
		</if>		 
		order by t1.id DESC
	</select>
	
	<!-- 财务处理-试听详情 -->
	<select id="selectListeningList" parameterType="Map" resultType="com.edu.erp.model.TCourseListening">
		select lis.id,
		       org.org_name branch_name,
		       lis.student_id,
		       stu.encoding student_code,
		       stu.student_name student_name, 
		       cou.course_name course_name,
		       lis.course_times course_times,
		       tea.teacher_name teacher_name,
		       tea.id teacher_id,
		       cou.unit_price unit_price,
		       to_char(to_date(lis.RECORD_TIME,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd') listening_date,
		       case lis.pay_status
		         when 1 then
		          '成功缴费'
		         when 2 then
		          '拒缴'
		         else
		          '已试听'
		       end pay_status_name, 
		       lis.remark remark
		  from t_course_listening lis
		  join tab_organization_info org
		    on lis.branch_id = org.id
		  join t_course cou
		    on lis.course_id = cou.id
		  join tab_student_info stu
		    on lis.student_id = stu.id
		  join tab_teacher_info tea
		    on cou.teacher_id = tea.id
		 where 1 = 1
		 <if test="bu_id != null and bu_id != -1">
				   and org.parent_id = #{bu_id, jdbcType=NUMERIC}
			</if>
			<if test="branch_id != null and branch_id != -1">
				   and lis.branch_id = #{branch_id, jdbcType=NUMERIC}
			</if>
			<if test="start_date != null">
				   and to_char(to_date(lis.RECORD_TIME,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd') >= #{start_date, jdbcType=VARCHAR}
			</if>
			<if test="end_date != null">
				   and to_char(to_date(lis.RECORD_TIME,'yyyy-MM-dd HH24:MI:SS'),'yyyy-MM-dd') &lt;= #{end_date, jdbcType=VARCHAR} 
			</if>
		 order by lis.id asc
	</select>
	
	<select id="isExist" parameterType="Map" resultType="java.lang.Integer">
		select count(1) from t_course_listening
		 where 1 = 1
		 and student_id = #{STUDENT_ID,jdbcType=NUMERIC}
		 and course_id = #{COURSE_ID,jdbcType=NUMERIC}
		 and course_times = #{COURSE_TIMES,jdbcType=NUMERIC}
	</select>
	
	<insert id="insertTCourseListening"  parameterType="java.util.HashMap">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      		SELECT SEQ_T_COURSE_LISTENING.currval AS id from dual
   		</selectKey>
		insert into T_COURSE_LISTENING
		(
            ID ,
            BRANCH_ID ,
            STUDENT_ID ,
            COURSE_ID ,
            COURSE_TIMES ,
            LISTENING_DATE,
            PAY_STATUS ,
            RECORDER ,
            RECORD_TIME ,
            UPDATER ,
            UPDATE_TIME ,
            REMARK
		)   
		values 
		(
			SEQ_T_COURSE_LISTENING.nextval,
			#{BRANCH_ID,jdbcType=NUMERIC},
			#{STUDENT_ID,jdbcType=NUMERIC},
			#{COURSE_ID,jdbcType=NUMERIC},
			#{COURSE_TIMES,jdbcType=NUMERIC},
			#{LISTENING_DATE,jdbcType=VARCHAR},
			#{PAY_STATUS,jdbcType=NUMERIC},
			#{RECORDER,jdbcType=NUMERIC},
			#{RECORD_TIME,jdbcType=VARCHAR},
			#{UPDATER,jdbcType=NUMERIC},
			#{UPDATE_TIME,jdbcType=VARCHAR},
			#{REMARK,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateTCourseListening"  parameterType="java.util.HashMap">
		update T_COURSE_LISTENING t set
		t.REMARK = #{REMARK,jdbcType=VARCHAR},
		t.UPDATER = #{UPDATER,jdbcType=NUMERIC},
		t.UPDATE_TIME = #{UPDATE_TIME,jdbcType=VARCHAR},
		t.PAY_STATUS = #{PAY_STATUS,jdbcType=NUMERIC}
		where  1 = 1
		<if test="COURSE_ID != null">
			and	COURSE_ID = #{COURSE_ID,jdbcType=NUMERIC}
		</if>
		<if test="STUDENT_ID != null">
			AND STUDENT_ID = #{STUDENT_ID,jdbcType=NUMERIC}
		</if>
		<if test="ID != null">
			and t.id = #{ID}
		</if>    
	</update>
	
	<delete id="delete_t_course_listening"  parameterType="java.util.HashMap">
		DELETE
		FROM
		    T_COURSE_LISTENING
		WHERE
		    COURSE_ID = #{COURSE_ID,jdbcType=NUMERIC}
		    AND STUDENT_ID = #{STUDENT_ID,jdbcType=NUMERIC}
		    AND COURSE_TIMES = #{COURSE_TIMES,jdbcType=NUMERIC}
	</delete>
	
	<select id="queryTCourseListeningSc"  parameterType="java.util.HashMap" resultType="HashMap">
			SELECT
			    VCI.* ,
			    TCS.ID AS SCHEDULING_ID ,
			    TCS.COURSE_TIMES ,
			    date_format(TCS.COURSE_DATE,'%Y-%m-%d') AS COURSE_DATE,
			    TCL.PAY_STATUS ,
			    TCL.RECORD_TIME,
			    TCL.REMARK,
			    TCL.LISTENING_DATE
			FROM
			    T_COURSE_SCHEDULING TCS INNER JOIN T_COURSE_LISTENING TCL
			        ON TCL.COURSE_ID = TCS.COURSE_ID
			    AND TCL.STUDENT_ID = #{STUDENT_ID,jdbcType=NUMERIC}
			    AND TCS.COURSE_TIMES = TCL.COURSE_TIMES LEFT JOIN VIEW_COURSE_INFO VCI
			        ON VCI.ID = TCS.COURSE_ID
			WHERE
			    TCS.COURSE_ID = #{COURSE_ID,jdbcType=NUMERIC}
			ORDER BY
			    TCS.COURSE_TIMES
	</select>

	<update id="updateListeningDateByCourseSchedule" parameterType="java.util.HashMap">
		UPDATE
			t_course_listening tcl
		SET
			listening_date=
			(
				SELECT
					date_format(str_to_date(tcs.course_date,'%Y%m%d'),'%Y-%m-%d')
				FROM
					t_course_scheduling tcs
				WHERE
					tcs.course_id=tcl.course_id
				AND tcs.course_times=tcl.course_times)
		WHERE
			tcl.course_id=#{course_id}
		AND EXISTS
			(
				SELECT
					1
				FROM
					t_course_scheduling tcs
				WHERE
					tcs.course_id=tcl.course_id
				AND tcs.course_times=tcl.course_times)
	</update>
</mapper>