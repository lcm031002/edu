<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.OrderPayCostDao">
	<select id="selectList"
		resultType="com.edu.erp.model.TabOrderPayCost"
		parameterType="java.lang.Long">
		 select topc.*,
		       topcd.payment_way,
		       topcd.staffappprem,
		       topcd.client_card_no,
		       topcd.client_name,
		       topcd.create_time,
		       topcd.pos_id,
		       (select tei.employee_name
		          from tab_employee_info tei, tab_user_info tui
		         where tei.id = tui.employee_id
		           and tui.id = topc.create_user) createusername,
		       (select toi.org_name
		          from tab_organization_info toi
		         where toi.id = topc.branch_id) branch_name,
		       '' descrption
		  from tab_order_pay_cost topc, tab_order_pay_cost_detail topcd
		 where topc.id = topcd.order_buy_id
		   and topc.order_id = #{orderId, jdbcType = NUMERIC}
	</select>
	<select id="queryTabOrderPayCost"
		resultMap="orderPayCostPojoMap"
		parameterType="java.lang.Long">
		select topc.*,
		       tei.employee_name  as createUser,
		       tei2.employee_name as updateUser,
		       toi.org_name       as branchName
		  from tab_order_pay_cost topc
		  left join tab_employee_info tei
		    on tei.id = topc.create_user
		  left join tab_employee_info tei2
		    on tei2.id = topc.update_user
		  left join tab_organization_info toi
		    on toi.id = topc.branch_id
		 where topc.order_id = #{orderId, jdbcType = NUMERIC}
	</select>
	
	<select id="selectOne"
		resultType="com.edu.erp.model.TabOrderPayCost"
		parameterType="com.edu.erp.model.TabOrderPayCost">
			SELECT
			    topc.id as id,
			    topc.encoding as encoding,
			    ORDER_ID as orderId,
			    BUY_DATE as buyDate,
			    STUDENT_ID as studentId,
			    SUM_PRICE as sumPrice,
			    ACTUAL_PRICE as actualPrice,
			    CASH_PRICE as cashPrice,
			    CARD_PRICE as cardPrice,
			    TRANSFER_PRICE as transferPrice,
			    ACCOUNT_PRICE as accountPrice,
			    UNITARY_ACCOUNT as unitaryAccount,
			    PAYMENT_TYPE as paymentType,
			    BRANCH_ID as branchId,
			    BU_ID as buId,
			    AREA_ORG_ID as areaOrgId,
			    STATUS as status,
			    LAST_APPROVER as lastApprover,
			    APPROVE_TIME as approveTime,
			    BEFORE_OPERATE_BALANCE as beforeOperateBalance,
			    CREATE_USER as createUser,
			    CREATE_TIME,
			    UPDATE_USER as updateUser,
			    UPDATE_TIME,
			    EXTEND_COLUMN as extendColumn,
			    EXTEND_COLUMN2 as extendColumn2,
			    EXTEND_COLUMN3 as extendColumn3 ,
			    EXTEND_COLUMN4 as extendColumn4,
			    before_operate_balance as before_operate_balance
			FROM
			    tab_order_pay_cost topc
			WHERE topc.order_id = #{orderId,jdbcType=NUMERIC}
	</select>

	<insert id="saveOrderPayCost" parameterType="com.edu.erp.model.TabOrderPayCost">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="BEFORE">
			SELECT SEQ_TAB_ORDER_PAY_COST.nextval AS id from dual
		</selectKey>
		INSERT INTO TAB_ORDER_PAY_COST
		(ID,
		ENCODING,
		ORDER_ID,
		BUY_DATE,
		STUDENT_ID,
		SUM_PRICE,
		ACTUAL_PRICE,
		CASH_PRICE,
		CARD_PRICE,
		TRANSFER_PRICE,
		ACCOUNT_PRICE,
		UNITARY_ACCOUNT,
		PAYMENT_TYPE,
		BRANCH_ID,
		BU_ID,
		AREA_ORG_ID,
		STATUS,
		LAST_APPROVER,
		APPROVE_TIME,
		BEFORE_OPERATE_BALANCE,
		CREATE_USER,
		CREATE_TIME,
		UPDATE_USER,
		UPDATE_TIME,
		EXTEND_COLUMN,
		EXTEND_COLUMN2,
		EXTEND_COLUMN3,
		EXTEND_COLUMN4,
		FROZEN_ACCOUNT_PRICE,
        ONLINE_PRICE)
		VALUES
		(
		#{id,jdbcType=NUMERIC},
		#{encoding,jdbcType=VARCHAR},
		#{orderId,jdbcType=NUMERIC},
		#{buyDate,jdbcType=VARCHAR},
		#{studentId,jdbcType=NUMERIC},
		#{sumPrice,jdbcType=NUMERIC},
		#{actualPrice,jdbcType=NUMERIC},
		#{cashPrice,jdbcType=NUMERIC},
		#{cardPrice,jdbcType=NUMERIC},
		#{transferPrice,jdbcType=NUMERIC},
		#{accountPrice,jdbcType=NUMERIC},
		#{unitaryAccount,jdbcType=NUMERIC},
		#{paymentType,jdbcType=NUMERIC},
		#{branchId,jdbcType=NUMERIC},
		#{buId,jdbcType=NUMERIC},
		#{areaOrgId,jdbcType=NUMERIC},
		#{status,jdbcType=NUMERIC},
		#{lastApprover,jdbcType=NUMERIC},
		#{approveTime,jdbcType=VARCHAR},
		#{beforeOperateBalance,jdbcType=NUMERIC},
		#{createUser,jdbcType=NUMERIC},
		#{create_time,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=NUMERIC},
		#{update_time,jdbcType=TIMESTAMP},
		#{extendColumn,jdbcType=VARCHAR},
		#{extendColumn2,jdbcType=VARCHAR},
		#{extendColumn3,jdbcType=NUMERIC},
		#{extendColumn4,jdbcType=NUMERIC},
		#{frozenAccountPrice,jdbcType=NUMERIC},
        #{onlinePrice,jdbcType=NUMERIC}
		)
	</insert>
	
	<delete id="deleteOrderPayCost" parameterType="com.edu.erp.model.TabOrderPayCost">
		delete from TAB_ORDER_PAY_COST where id = #{id,jdbcType=NUMERIC}
	</delete>
	
	<delete id="deleteByOrderId" parameterType="java.lang.Long">
		delete from TAB_ORDER_PAY_COST where order_id = #{orderId,jdbcType=NUMERIC}
	</delete>
	
	<insert id="saveOrderPayCostDetail" parameterType="com.edu.erp.model.TabOrderPayCostDetail">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="BEFORE">
			SELECT SEQ_TAB_ORDER_PAY_COST_DETAIL.nextval AS id from dual
		</selectKey>
		INSERT INTO TAB_ORDER_PAY_COST_DETAIL
		(ID,
		ORDER_BUY_ID,
		PAYMENT_WAY,
		STAFFAPPPREM,
		CLIENT_CARD_NO,
		CLIENT_NAME,
		COMPANY_CARD_ID,
		CREATE_TIME,
		POS_ID,
		EXTEND_COLUMN,
		EXTEND_COLUMN2,
		EXTEND_COLUMN3,
		EXTEND_COLUMN4,
        EB_NO)
		VALUES
		(
		#{id,jdbcType=NUMERIC},
		#{order_buy_id,jdbcType=NUMERIC},
		#{payment_way,jdbcType=NUMERIC},
		#{staffappprem,jdbcType=NUMERIC},
		#{client_card_no,jdbcType=VARCHAR},
		#{client_name,jdbcType=VARCHAR},
		#{company_card_id,jdbcType=NUMERIC},
		#{create_time,jdbcType=DATE},
		#{pos_id,jdbcType=NUMERIC},
		#{extend_column,jdbcType=VARCHAR},
		#{extend_column2,jdbcType=VARCHAR},
		#{extend_column3,jdbcType=NUMERIC},
		#{extend_column4,jdbcType=NUMERIC},
        #{eb_no,jdbcType=VARCHAR}
		)
	</insert>
	<delete id="deleteOrderPayCostDetail" parameterType="com.edu.erp.model.TabOrderPayCostDetail">
		delete from TAB_ORDER_PAY_COST_DETAIL where order_buy_id = #{order_buy_id,jdbcType=NUMERIC}
	</delete>
	
	<delete id="deleteDetailByOrderId" parameterType="java.lang.Long">
		delete from tab_order_pay_cost_detail t
		 where exists (select 1
		          from tab_order_pay_cost t1
		         where t1.id = t.order_buy_id
		           and t1.order_id = #{orderId,jdbcType=NUMERIC})
	</delete>
	
	<select id="queryTabOrderPayCostDetail"
		resultType="com.edu.erp.model.TabOrderPayCostDetail"
		parameterType="java.lang.Long">
		 select distinct topcd.*,
		       decode(topcd.payment_way,
		              1,
		              '现金',
		              2,
		              '刷卡',
		              3,
		              '转账',
		              4,
		              '储值账户',
		              5,
		              '一元课程',
		              6,
		              '支付宝',
		              7,
		              '微信',
		              8,
		              '网银',
		              9,
		              '冻结账户',
		              10,
		              '在线支付(微信公众号)',
		              11,
		              '在线支付(WEB页面)') payment_way_str,
		       to_char(topcd.create_time, 'yyyy-MM-dd') create_time_string,
		       (select tei.employee_name
		          from tab_employee_info tei, tab_user_info tui
		         where tei.id = tui.employee_id
		           and tui.id = topc.create_user) createusername,
		       (select toi.org_name
		          from tab_organization_info toi
		         where toi.id = topc.branch_id) org_name,
		       '' descrption,
		       dd.simple_name,
		       dd.device_code,
		       topcd.eb_no
		  from tab_order_pay_cost topc, tab_order_pay_cost_detail topcd
		  left join tab_data_device dd
		    on topcd.pos_id = dd.id
		 where topc.id = topcd.order_buy_id
		   and topc.order_id = #{orderId, jdbcType = NUMERIC}
	</select>
	
	<resultMap type="com.edu.erp.model.TabOrderPayCost" id="orderPayCostPojoMap">
		<id property="id" column="id"/>
		<result property="encoding" column="ENCODING"/>
		<result property="orderId" column="ORDER_ID"/>
		<result property="buyDate" column="BUY_DATE"/>
		<result property="studentId" column="STUDENT_ID"/>
		<result property="sumPrice" column="SUM_PRICE"/>
		<result property="actualPrice" column="ACTUAL_PRICE"/>
		<result property="cashPrice" column="CASH_PRICE"/>
		<result property="cardPrice" column="CARD_PRICE"/>
		<result property="transferPrice" column="TRANSFER_PRICE"/>
		<result property="accountPrice" column="ACCOUNT_PRICE"/>
		<result property="unitaryAccount" column="UNITARY_ACCOUNT"/>
		<result property="paymentType" column="PAYMENT_TYPE"/>
		<result property="branchId" column="BRANCH_ID"/>
		<result property="branchName" column="branchName"/>
		<result property="createUser" column="createUser"/>
		<result property="updateUser" column="updateUser"/>
		<result property="create_time" column="create_time"/>
		<result property="update_time" column="update_time"/>
		<result property="buId" column="BU_ID"/>
		<result property="areaOrgId" column="AREA_ORG_ID"/>
		<result property="lastApprover" column="LAST_APPROVER"/>
		<result property="approveTime" column="APPROVE_TIME"/>
		<result property="beforeOperateBalance" column="BEFORE_OPERATE_BALANCE"/>
		<result property="extendColumn" column="EXTEND_COLUMN"/>
		<result property="extendColumn2" column="EXTEND_COLUMN2"/>
		<result property="extendColumn3" column="EXTEND_COLUMN3"/>
		<result property="extendColumn4" column="EXTEND_COLUMN4"/>
		<result property="before_operate_balance" column="before_operate_balance"/>
	</resultMap>
</mapper>