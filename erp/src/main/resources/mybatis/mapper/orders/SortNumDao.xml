<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.SortNumInfoDao">
	
	<insert id="saveSortNumInfo"  parameterType="com.edu.erp.model.SortNumInfo">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE">
			select  SEQ_SORTNUM_INFO.nextval as id from dual
		</selectKey>
		insert into t_sortnum_info
	      (id, 
	       student_id, 
	       branch_id, 
	       course_id, 
	       seq, 
	       num, 
	       create_user, 
	       create_time, 
	       update_user, 
	       update_time, 
	       status
	       )
    	values
	      ( 
	      #{id,jdbcType=NUMERIC},
		  #{studentId,jdbcType=NUMERIC},
		  #{branchId,jdbcType=NUMERIC},
		  #{courseId,jdbcType=NUMERIC},
		  #{seq,jdbcType=NUMERIC},
		  #{num,jdbcType=VARCHAR},
		  #{createUser,jdbcType=NUMERIC},
		  #{createTime,jdbcType=TIMESTAMP},
		  #{updateUser,jdbcType=NUMERIC},
		  #{updateTime,jdbcType=TIMESTAMP},
		  #{status,jdbcType=NUMERIC}
	       )
	</insert>
	
	<select id="queryCountSortNumInfo" resultType="com.edu.erp.model.SortNumInfo" parameterType="map">
		select
		    count(*) num,
		    tdg.grade_name gradeName,
		    ts.name subjectName,
		    tti.teacher_name teacherName,
		    tc.status,
		    tc.course_name courseName,
		    tc.id
		from
		    t_sortnum_info tst
		left join
		    t_course tc
		on
		    tst.course_id=tc.id
		left join
		    tab_teacher_info tti
		on
		    tc.teacher_id=tti.id
		left join
		    tp_subject ts
		on
		    ts.id=tc.subject_id
		left join
		    tab_data_grade tdg
		on
		    tdg.id=tc.grade_id
		where tst.status=1 
		<if test="branchId != null and branchId != -1">
			and tst.branch_id=#{branchId}
		</if>
		<if test="seasonId != null and seasonId != ''">
			and tc.season_id=#{seasonId}
		</if>
		<if test="gradeId != null and gradeId != ''">
			and tc.grade_id=#{gradeId}
		</if>
		<if test="subjectId != null and subjectId != ''">
			and tc.subject_id=#{subjectId}
		</if>
		<if test="courseId != null and courseId != ''">
			and (tc.course_name like '%${courseId}%' or tc.course_no like
			'%${courseId}%' or tc.id like '%${courseId}%')
		</if>
		group by
		    tdg.grade_name,
		    ts.name,
		    tti.teacher_name,
		    tc.status,
		    tc.course_name,
		    tc.id
	</select>
	
	<select id="queryCountSortNumInfoBySeq" resultType="com.edu.erp.model.SortNumInfo" parameterType="com.edu.erp.model.SortNumInfo">
		select
		    count(*) num,
		    tdg.grade_name gradeName,
		    ts.name subjectName,
		    tti.teacher_name teacherName,
		    tc.status,
		    tc.course_name courseName,
		    tc.id,
		    tst.seq
		from
		    t_sortnum_info tst
		left join
		    t_course tc
		on
		    tst.course_id=tc.id
		left join
		    tab_teacher_info tti
		on
		    tc.teacher_id=tti.id
		left join
		    tp_subject ts
		on
		    ts.id=tc.subject_id
		left join
		    tab_data_grade tdg
		on
		    tdg.id=tc.grade_id
		where tst.status=1 
		<if test="branchId != null and branchId != ''">
			and tst.branch_id=#{branchId}
		</if>
		<if test="seasonId != null and seasonId != ''">
			and tc.season_id=#{seasonId}
		</if>
		<if test="gradeId != null and gradeId != ''">
			and tc.grade_id=#{gradeId}
		</if>
		<if test="subjectId != null and subjectId != ''">
			and tc.subject_id=#{subjectId}
		</if>
		<if test="courseId != null and courseId != ''">
			and tst.course_id=#{courseId}
		</if>
		group by
		    tdg.grade_name,
		    ts.name,
		    tti.teacher_name,
		    tc.status,
		    tc.course_name,
		    tc.id,
		    tst.seq
	</select>
	
	<select id="querySortNumDetailByCourseId" resultType="com.edu.erp.model.SortNumInfo" parameterType="java.lang.Long">
			SELECT
			    COUNT(*) num,
			    tst.seq seq,
			    tcs.course_date courseDate,
			    tcs.start_time startTime,
			    tcs.end_time endTime,
			    tc.teacher_id teacherId,
			    tti.teacher_name teacherName,
			    tc.people_count peopleCount,
			    tst.course_id courseId
			FROM
			    t_sortnum_info tst
			LEFT JOIN
			    t_course tc
			ON
			    tc.id=tst.course_id
			LEFT JOIN
			    t_course_scheduling tcs
			ON
			    tc.id=tcs.course_id
			AND tst.seq=tcs.course_times
			LEFT JOIN
			    tab_teacher_info tti
			ON
			    tti.id=tc.teacher_id
			WHERE
				tst.status=1 and
			    tst.course_id= #{courseId,jdbcType=NUMERIC} 
			GROUP BY
			    tst.seq,
			    tcs.course_date,
			    tcs.start_time,
			    tcs.end_time,
			    tc.teacher_id,
			    tti.teacher_name,
			    tc.people_count,
			    tst.course_id
			   ORDER BY 
			   tst.seq asc
	</select>
	
	<select id="querySortNumPage" resultType="com.edu.erp.model.SortNumInfo" parameterType="Map">
			select
				tst.num,
			    tst.seq,
			    tst.course_id courseId,
			    tst.student_id studentId,
			    tsi.student_name studentName,
			    tsi.phone phone,
			    tst.create_time createTime,
			    tst.create_user createUser,
			    tst.update_time updateTime,
			    tst.update_user updateUser
			from
			    t_sortnum_info tst
			left join
			    tab_student_info tsi
			on
			    tst.student_id=tsi.id
			where tst.status=1
			<if test="studentId != null and studentId != ''">
			   and  tst.student_id=#{studentId}
			</if>
			<if test="seq != null and seq != ''">
			    and tst.seq=#{seq}
			</if>
			<if test="courseId != null and courseId != ''">
			    and tst.course_id=#{courseId}
			</if>
			order by tst.num asc
	</select>
	
	<select id="querySortNumInfo" resultType="com.edu.erp.model.SortNumInfo" parameterType="com.edu.erp.model.SortNumInfo">
			select
				tst.num,
			    tst.seq,
			    tst.student_id studentId,
			    tsi.student_name studentName,
			    tsi.phone phone,
			    tsi.create_time createTime,
			    tsi.create_user createUser,
			    tsi.update_time createTime,
			    tsi.update_user updateUser
			from
			    t_sortnum_info tst
			left join
			    tab_student_info tsi
			on
			    tst.student_id=tsi.id
			where tst.status=1
			<if test="studentId != null and studentId != ''">
			   and  tst.student_id=#{studentId}
			</if>
			<if test="seq != null and seq != ''">
			    and tst.seq=#{seq}
			</if>
			<if test="courseId != null and courseId != ''">
			    and tst.course_id=#{courseId}
			</if>
			order by tst.num asc
	</select>
	
	<select id="queryMaxNum" resultType="java.lang.Long" parameterType="Map">
			select
			    max(tst.num) seq
			from
			    t_sortnum_info tst
			where tst.status=1
			<if test="course_times != null and course_times != ''">
			    and  tst.seq=#{course_times}
			</if>
			<if test="course_id != null and course_id != ''">
			    and tst.course_id=#{course_id}
			</if>
			<if test="course_times != null and course_times != ''">
			    and tst.seq=#{course_times}
			</if>
	</select>
	
	<update id="deleteSortNum"  parameterType="com.edu.erp.model.SortNumInfo">
		update t_sortnum_info t set t.status=#{status}, update_time=sysdate
		where t.status=1
		<if test="seq != null and seq != ''">
			    and  t.seq=#{seq}
		</if>
		<if test="courseId != null and courseId != ''">
		    and t.course_id=#{courseId}
		</if>
		<if test="studentId != null and studentId != ''">
		    and t.student_id=#{studentId}
		</if>
	
	</update>
	
	<update id="deleteOrderSortNum"  parameterType="Map">
		update t_sortnum_info t set t.status=#{status}, update_time=sysdate
		where t.status=1
		<if test="seq != null and seq != ''">
			    and  t.seq in (${seq})
		</if>
		<if test="courseId != null and courseId != ''">
		    and t.course_id=#{courseId}
		</if>
		<if test="studentId != null and studentId != ''">
		    and t.student_id=#{studentId}
		</if>
	
	</update>
	
	
	
</mapper>