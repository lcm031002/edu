<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.TOrderDao">
	
	<select id="selectForPage" parameterType="map" resultType="com.edu.erp.model.TOrder">
			select 	a.*,
						concat(concat(concat(concat(b.student_name,'('), concat(b.id, ')')), '('), concat(b.encoding, ')')) 
                		student_name_id_encoding,
						d.org_name as branch_name,
						e.org_name as bu_name,
						f.org_name as city_name,
						h.employee_name as agent_name,
						j.employee_name as create_user_name,
						order_info.invoice_status invoice_status
			from		t_order a
			left join	tab_order_info order_info on a.id = order_info.id
			left join	tab_student_info b on a.student_id = b.id
			left join	tab_organization_info d on a.branch_id = d.id
			left join	tab_organization_info e on a.bu_id = e.id
			left join	tab_organization_info f on a.city_id = f.id
			left join 	tab_user_info g on a.agent_id = g.id
			left join 	tab_employee_info h on g.employee_id = h.id
			left join 	tab_user_info i on a.create_user = i.id
			left join 	tab_employee_info j on i.employee_id = j.id
		 where			a.bu_id = #{bu_id}
		 <if test="branch_id != null and branch_id != ''">
		 	and			a.branch_id = #{branch_id}
		 </if>
		 <if test="order_type != null and order_type != -1 and order_type != ''">
		 	and			a.order_type = #{order_type}
		 </if>
		 <if test="business_type != null and business_type != -1 and business_type != ''">
		 	and			a.business_type = #{business_type}
		 </if>
		 <if test="student_name != null and student_name != ''">
		 	and			(b.student_name like '%${student_name}%' or b.encoding like '%${student_name}%' or b.phone like '%${student_name}%')
		 </if>
		 <if test="order_no != null and order_no != ''">
		 	and			(a.order_no like '%${order_no}%' or a.id like '%${order_no}%')
		 </if>
		 order by a.id DESC		
	</select>
	
	<!-- 查询报班单信息 -->
	<select id="queryOrderInfo" resultType="com.edu.erp.model.TOrder"
		parameterType="java.lang.Long">
		select tod.* ,tei.EMPLOYEE_NAME as audit_name
		  from T_ORDER tod
		  left join tab_user_info tui on tui.id = tod.audit_user
		  left join TAB_EMPLOYEE_INFO tei on tei.id = tui.employee_id
		 where tod.id = #{orderId,jdbcType=NUMERIC}
	</select>
	
	<!-- 通过变更ID查询报班单信息 -->
	<select id="queryOrderInfoByChangeId" resultType="com.edu.erp.model.TOrder"
		parameterType="java.lang.Long">
		select tod.* from T_ORDER tod
		  left join t_order_change toc on tod.id = toc.order_id
		 where toc.id = #{changeId,jdbcType=NUMERIC}
	</select>
	
	<select id="queryTuiFeiByStudentId" parameterType="map" resultType="java.lang.String">
		select sum(nvl(oc.course_times,0)) course_times
		  from t_order_change t
		  left join t_order o
		    on o.id = t.order_id
		  left join tc_order_course oc
		    on oc.change_id = t.id
		  left join t_course tc 
		  	on tc.id = oc.order_course_id
		 where t.change_type = 1
		   and t.change_status = 5
		   and o.order_status = 1
		   and tc.business_type = 3
		   and o.student_id = #{studentId,jdbcType=NUMERIC} 
	</select>
	
	<select id="queryWfdOrderDetails" parameterType="map" resultType="map">
		select  ordercourse.course_id,
				ordercourse.course_total_count,	
				ordercourse.course_surplus_count,
				torder.business_type business_type
		  from t_order torder
		  join t_order_course ordercourse
		    on torder.id = ordercourse.order_id and torder.order_status = 1 and (ordercourse.status != 2 or ordercourse.status is null)
		 where torder.business_type = 3 
		 	and	torder.student_id = #{student_id} 
	</select>
	
	<select id="qf_queryWfdOrderDetails" parameterType="map" resultType="map">
		select  ordail.course_id,
				ordail.course_total_count,	
				ordail.course_surplus_count,
				ord.business_type business_type
		  from tab_order_info ord
		  join tab_order_info_detail ordail
		    on ord.id = ordail.order_id and ord.valid_status = 1
		 where ord.business_type = 3 
      		and ord.pay_status = 0
      	and ord.check_status!=4
		and	ord.student_id = #{student_id}   
	</select>
	
	<!-- 查询学生个性化总的报班课时 -->
	<select id="selectStuYdyTotalCourseCount" parameterType="map" resultType="java.lang.Integer">
		select sum(toco.course_total_count) - sum(nvl(toc.course_times, 0))
		  from t_order tord
		  left join t_order_course toco
		    on tord.id = toco.order_id
		  left join t_order_change toch
		    on toch.order_id = tord.id
		   and toch.change_type in (1, 5)
		   and toch.change_status = 5
		  left join tc_order_course toc
		    on toc.change_id = toch.id
		 where tord.business_type = 2
		   and toco.order_type = 1
		   and tord.order_status = 1
		   and tord.create_date >= #{create_date}
		   and tord.student_id = #{student_id}
	</select>
	
	<update id="updateOrderStatus" parameterType="com.edu.erp.model.TOrder">
		update t_order set order_status = #{order_status,jdbcType=NUMERIC} where ID = #{id,jdbcType=NUMERIC}
	</update>
	
	<!-- 保存订单信息 -->
	<insert id="saveOrderInfo" parameterType="com.edu.erp.model.TOrder">
		insert into t_order
	      (id,
	       order_no,
	       student_id, 
	       city_id, 
	       bu_id, 
	       branch_id, 
	       agent_id, 
	       business_type, 
	       fee_amount, 
	       actural_amount, 
	       create_date, 
	       create_user, 
	       audit_date, 
	       audit_user,
	       fin_confirm_date, 
	       fin_confirm_user, 
	       order_type, 
	       remark, 
	       immediate_reduce, 
	       order_status, 
	       source_order,
	       invoice_code
	       )
	    values
	      (
	       #{id,jdbcType=NUMERIC},
		  #{order_no,jdbcType=VARCHAR},
		  #{student_id,jdbcType=NUMERIC},
		  #{city_id,jdbcType=NUMERIC},
		  #{bu_id,jdbcType=NUMERIC},
		  #{branch_id,jdbcType=NUMERIC},
		  #{agent_id,jdbcType=NUMERIC},
		  #{business_type,jdbcType=NUMERIC},
		  #{fee_amount,jdbcType=NUMERIC},
		  #{actural_amount,jdbcType=NUMERIC},
		  #{create_date,jdbcType=TIMESTAMP},
		  #{create_user,jdbcType=NUMERIC},
		  #{audit_date,jdbcType=TIMESTAMP},
		  #{audit_user,jdbcType=NUMERIC},
		  #{fin_confirm_date,jdbcType=TIMESTAMP},
		  #{fin_confirm_user,jdbcType=NUMERIC},
		  #{order_type,jdbcType=NUMERIC},
		  #{remark,jdbcType=VARCHAR},
		  #{immediate_reduce,jdbcType=NUMERIC},
		  #{order_status,jdbcType=NUMERIC},
		  #{source_order,jdbcType=NUMERIC},
		  #{invoice_code,jdbcType=VARCHAR}
	       )
	</insert>
	
	<!-- 保存订单课程信息 -->
	<insert id="saveOrderCourse" parameterType="com.edu.erp.model.TOrderCourse">
		insert into t_order_course
	      (id, 
	       order_id, 
	       course_id, 
	       branch_id, 
	       former_unit_price, 
	       former_sum_price, 
	       discount_unit_price, 
	       discount_sum_price, 
	       discount_rate, 
	       discount_amount,
	       manage_fee, 
	       course_total_count, 
	       course_surplus_count,
	       course_schedule_count,
	       create_user, 
	       create_time, 
	       update_user, 
	       update_time,
	       root_course_id,
	       surplus_cost, 
	       quit_flag, 
	       order_type, 
	       status 
	       )
	    values
	      (
	      #{id,jdbcType=NUMERIC},
		  #{order_id,jdbcType=NUMERIC},
		  #{course_id,jdbcType=NUMERIC},
		  #{branch_id,jdbcType=NUMERIC},
		  #{former_unit_price,jdbcType=NUMERIC},
		  #{former_sum_price,jdbcType=NUMERIC},
		  #{discount_unit_price,jdbcType=NUMERIC},
		  #{discount_sum_price,jdbcType=NUMERIC},
		  #{discount_rate,jdbcType=NUMERIC},
		  #{discount_amount,jdbcType=NUMERIC},
		  #{manage_fee,jdbcType=NUMERIC},
		  #{course_total_count,jdbcType=NUMERIC},
		  #{course_surplus_count,jdbcType=NUMERIC},
		  #{course_schedule_count,jdbcType=NUMERIC},
		  #{create_user,jdbcType=NUMERIC},
		  #{create_time,jdbcType=TIMESTAMP},
		  #{update_user,jdbcType=NUMERIC},
		  #{update_time,jdbcType=TIMESTAMP},
		  #{root_course_id,jdbcType=NUMERIC},
		  #{surplus_cost,jdbcType=NUMERIC},
		  #{quit_flag,jdbcType=NUMERIC},
		  #{order_type,jdbcType=VARCHAR},
		  #{status,jdbcType=VARCHAR}
	       )
	</insert>
	
	<!-- 查询晚辅导套餐订单详情 -->
	<select id="queryWfdComboOrderDetails" parameterType="java.util.Map" resultType="java.util.Map">
		select 			combo.*,
						torder.student_id,
						course.branch_id course_branch,
						torder.create_user order_user
			from		t_order_course_combo combo
		join			t_order_course ordercourse on ordercourse.id = combo.order_course_id and combo.status = 1
		join			t_order torder on torder.id = ordercourse.order_id and torder.order_status =1 and (ordercourse.status != 2 or ordercourse.status is null)
		join			t_course_combo_wfd combowfd on combo.course_combo_id = combowfd.id
		join			t_course course on ordercourse.course_id = course.id
		where			#{cur_date} >= to_char(trunc(combo.start_date), 'yyyy-MM-dd') and ordercourse.course_surplus_count > 0  
						and combowfd.combo_type in(1)
	</select>

</mapper>
