<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.erp.dao.TOrderCourseDao">

	<!-- 查询报班单信息 -->
	<select id="queryOrderDetailInfo" resultType="com.edu.erp.model.TOrderCourse"
		parameterType="java.lang.Long">
		select toc.*,toi.org_name branch_name
		from T_ORDER_COURSE  toc
		left join tab_organization_info toi
			on toi.id=toc.branch_id
		where toc.order_id = #{orderId,jdbcType=NUMERIC}
		order by toc.id
	</select>
	
	<select id="queryOrderCourse" resultType="com.edu.erp.model.TOrderCourse"
		parameterType="Map">
		select toc.*, tod.student_id,tc.people_count
		from T_ORDER_COURSE toc
		left join t_order tod on tod.id = toc.order_id
		 left join t_course tc on tc.id = toc.course_id
		where  tod.order_status=1 and (toc.status != 2 or toc.status is null)
			<if test="id != null and id != ''">
		   		and toc.id = #{id,jdbcType=NUMERIC}
		   	</if>
		   	<if test="order_id != null and order_id != ''">
				and toc.order_id = #{order_id,jdbcType=NUMERIC}
		   	</if>
		   	<if test="course_id != null and course_id != ''">
				and toc.course_id = #{course_id,jdbcType=NUMERIC}
		   	</if>
	</select>

	<select id="queryOrderCourseByRootTimes" resultType="com.edu.erp.model.TOrderCourse" parameterType="Map">
		select toc.* from t_order_course toc left join
		t_order_course_times toct on
		toc.id=toct.ocid
		where
		(toc.status != 2 or toc.status is null) and toct.is_valid=1
		<if test="course_id != null and course_id != ''">
			and toc.course_id = #{course_id,jdbcType=NUMERIC}
		</if>
		<if test="order_id != null and order_id != ''">
			and toc.order_id = #{order_id,jdbcType=NUMERIC}
		</if>
		<if test="root_course_id != null and root_course_id != ''">
			and toc.root_course_id = #{root_course_id,jdbcType=NUMERIC}
		</if>
		<if test="times != null and times != ''">
			and toct.times in (${times})
		</if>
	</select>

	<select id="queryOrderCourseById" resultType="com.edu.erp.model.TOrderCourse" parameterType="java.lang.Long">
		select toc.*, tod.student_id,tc.hour_len
		from T_ORDER_COURSE toc
		left join t_order tod on tod.id = toc.order_id
		left join t_course tc on tc.id=toc.course_id 
		where  toc.id = #{id,jdbcType=NUMERIC}
	</select>

	<select id="queryStudentOrderCourse" parameterType="HashMap"
		resultType="com.edu.erp.model.TOrderCourse">
		select toc.id,
				toc.order_id,
				toc.course_id,
				toc.branch_id,
				toc.former_unit_price,
				toc.former_sum_price,
				toc.discount_unit_price,
				toc.discount_sum_price,
				toc.discount_rate,
				toc.discount_amount,
				nvl(toc.manage_fee, 0) as manage_fee,
				nvl(toc.course_total_count, 0) as course_total_count,
				nvl(toc.course_surplus_count, 0) as course_surplus_count,
				toc.create_user,
				toc.create_time,
				toc.update_user,
				toc.update_time,
				toc.old_id,
				toc.surplus_cost,
				toc.quit_flag,
				toc.order_type,
				toc.status,
				toc.root_course_id,
				toc.is_sended,
				toc.syn_exception,
				nvl(toc.course_schedule_count, 0) as course_schedule_count,
				nvl(toc.course_attend_count, 0) as course_attend_count,
		       tc.course_name,
		       tc.course_no,
		       tc.start_date,
       		   tc.end_date,
       		   tc.season_id,
       		   tc.subject_id,
       		   tc.hour_len,
		       tti.teacher_name,
		       tti.encoding     as teacher_encoding,
		       tod.student_id,
		       tod.remark,
		       toi.org_name     as branch_name,
		       tod.order_no     as order_no,
		       tdg.grade_name,
		       nvl(toc.course_total_count, 0) - nvl(toc.course_surplus_count, 0) as course_used_count,
		       tod.create_date as order_create_date,
		       torderi.invoice_status,
		       (select nvl(tcc.premium_type, 1)
	          		from tab_change_course tcc, t_order_change oc,T_ORDER_COURSE tdd
	         		where oc.id = tcc.change_id
	           		and tcc.order_course_id = tdd.id 
	           		and (tdd.id = toc.id 
	           		or toc.id = tdd.root_course_id 
	           		 )
	           		and oc.change_status not in (7, 8)
	           		and oc.order_id is not null
	           		and rownum = 1) premium_type,
                toc1.discount_sum_price as root_discount_sum_price,
            	toc1.course_total_count as root_course_total_count
		  from T_ORDER_COURSE toc
		  left join t_order tod
		    on tod.id = toc.order_id
		  left join t_course tc
		    on tc.id = toc.course_id
		  left join tab_teacher_info tti
		    on tti.id = tc.teacher_id
		  left join tab_organization_info toi
		    on toi.id = toc.branch_id
		  left join tab_data_grade tdg
    		on tc.grade_id = tdg.id
    	  left join tab_order_info torderi
    	  	on toc.order_id = torderi.id
    	  left join T_ORDER_COURSE toc1 on toc.root_course_id = toc1.id
		 where 
		   tod.order_status = 1
		   <if test="id != null">
		   	and toc.id = #{id,jdbcType=NUMERIC}
		   </if>
			<if test="(id == null or id == '') and businessType == 2">
				and toc.course_schedule_count > 0
			</if>
		   and (toc.status != 2 or toc.status is null)
		   and tod.business_type = #{businessType,jdbcType=NUMERIC}
		   and tod.student_id = #{studentId,jdbcType=NUMERIC}
		  <if test="branchId != null and businessType==1 and (product_line == null || product_line != 2)">
		   and (toc.branch_id = #{branchId,jdbcType=NUMERIC} or tc.branch_id = #{branchId,jdbcType=NUMERIC})
		   </if>
			<if test="branchId != null and businessType==1 and product_line == 2">
				and (toc.branch_id = #{branchId,jdbcType=NUMERIC} or tc.branch_id = #{branchId,jdbcType=NUMERIC}
				  or tod.branch_id = #{branchId,jdbcType=NUMERIC})
			</if>
		   <if test="branchId != null and businessType !=1 ">
				and (toc.branch_id = #{branchId,jdbcType=NUMERIC} or tc.branch_id = #{branchId,jdbcType=NUMERIC}
			    or tod.branch_id = #{branchId,jdbcType=NUMERIC})
		   </if>
		   
		 order by toc.order_id desc
	</select>

	
	<select id="queryOrderCoursePage" parameterType="java.lang.Long" resultType="com.edu.erp.model.TOrderCourse">
		select 		a.*,
						b.course_name,
						c.org_name as branch_name,
						c_user_emp.employee_name as create_user_name, u_user_emp.employee_name as update_user_name
			from 	t_order_course a
			left join	t_course b on a.course_id = b.id
			left join	tab_organization_info c	on a.branch_id = c.id 
			left join 	tab_user_info c_user on a.create_user = c_user.id
			left join 	tab_employee_info c_user_emp on c_user.employee_id = c_user_emp.id
			left join 	tab_user_info u_user on a.update_user = u_user.id
			left join 	tab_employee_info u_user_emp on u_user.employee_id = u_user_emp.id
		where	a.order_id = #{orderId,jdbcType=NUMERIC}
		order by a.id DESC			
	</select>

	
	<select id="queryOrderIdByChangeNo" resultType="java.lang.Long" parameterType="java.lang.String">
		    select toc.order_id  from tab_change_course t, t_order_course toc where t.change_no =  #{change_no}  and t.order_course_id = toc.id
	</select>
	
	<select id="queryTabChangeCourse" resultType="com.edu.erp.model.TCChangeCourse" parameterType="Map">
		    select t.*  from tab_change_course t  where 1=1 
		     <if test="change_id != null and change_id != ''">
				and  t.change_id =  #{change_id}  
		   	</if>
		   	 <if test="change_no != null and change_no != ''">
				and  t.change_no =  #{change_no}  
		   	</if>
	</select>
	
	<select id="queryManageFee" resultType="com.edu.erp.model.TOrderCourse" parameterType="Map">
		  select c.id,nvl(c.manage_fee, 0) manage_fee from t_order_course c
	      where (
	           c.id = #{order_course_id}
	           or c.root_course_id = #{order_course_id}
	           or (${root_course_id} is not null and c.id =${root_course_id}) 
	           or (${root_course_id} is not null and c.root_course_id = ${root_course_id}) 
	      )
	      and nvl(c.status, 1) = 1 
	      and c.manage_fee > 0
	</select>
	
	<select id="queryCourseSurplusCount" resultType="com.edu.erp.model.TOrderCourse" parameterType="Map">
		  select sum(nvl(c.course_surplus_count, 0)) course_surplus_count
      	  from t_order_course c
       	  where (
           c.id = #{order_course_id}
           or c.root_course_id = #{order_course_id}
           or (${root_course_id} is not null and c.id =${root_course_id}) 
           or (${root_course_id} is not null and c.root_course_id = ${root_course_id}) 
      )
	</select>
	
	<update id="updateTOrderCoursePrice"  parameterType="HashMap">
		  update t_order_course t
          set t.discount_unit_price  = #{discount_unit_price}, 
               t.manage_fee           = #{manage_fee}, 
               t.course_surplus_count =#{course_surplus_count},
               <if test="course_schedule_count != null">
               t.course_schedule_count =#{course_schedule_count},
							 </if>
               t.quit_flag            = #{quit_flag}, 
               t.surplus_cost        =#{surplus_cost}
         where t.id =#{order_course_id}
	</update>
	
	<!-- 更新订单课程信息，只用于更新某些特定字段 -->
	<update id="updateOrderCourse" parameterType="com.edu.erp.model.TOrderCourse">
		update t_order_course 
		set 
		
			<if test="course_schedule_count != null">
				course_schedule_count= #{course_schedule_count,jdbcType=NUMERIC},
		   	</if>
		   	<if test="course_surplus_count != null">
	    		course_surplus_count = #{course_surplus_count,jdbcType=NUMERIC},
	    	</if>
	    	<if test="surplus_cost != null">
       			surplus_cost = #{surplus_cost,jdbcType=NUMERIC},
       		</if>
       		<if test="manage_fee != null">
       			manage_fee = #{manage_fee,jdbcType=NUMERIC},
       		</if>
       		<if test="course_attend_count != null">
       			course_attend_count = #{course_attend_count,jdbcType=NUMERIC},
       		</if>
       		<if test="discount_unit_price != null">
				discount_unit_price= #{discount_unit_price,jdbcType=NUMERIC},
		   	</if>
		   	<if test="discount_sum_price != null">
				discount_sum_price= #{discount_sum_price,jdbcType=NUMERIC},
		   	</if>
		   	<if test="quit_flag != null">
				quit_flag= #{quit_flag,jdbcType=NUMERIC},
		   	</if>
	       	update_time = sysdate,
		    update_user = #{update_user,jdbcType=NUMERIC}
	    where  1=1 
	     <if test="id != null and id != ''">
	   		and id = #{id}
	    </if>
	    <if test="root_course_id != null and root_course_id != ''">
	   		and root_course_id=#{root_course_id}
	    </if>
	</update>
	
	<!-- 获取一个订单课程Id -->
	<select id="getOrderCourseId" resultType="java.lang.Long">
		select to_number(to_char(sysdate,'mmdd')||to_number(seq_tab_order_info_detail.nextval,'999999'),'999999000000') as id from dual
	</select>
	
	<!-- 插入带Id -->
	<insert id="insertOrderCourseWithId" parameterType="com.edu.erp.model.TOrderCourse">
		insert into t_order_course
			(
		     id,
		     order_id,
		     course_id,
		     branch_id,
		     former_unit_price,
		     former_sum_price,
		     discount_unit_price,
		     discount_sum_price,
		     discount_rate,
		     discount_amount,
		     manage_fee,
		     course_total_count,
		     course_surplus_count,
		     course_schedule_count,
		     create_user,
		     create_time,
		     update_user,
		     update_time,
		     old_id,
		     surplus_cost,
		     quit_flag,
		     order_type,
		     status,
		     root_course_id
	       )
	    values (
	    	#{id,jdbcType=NUMERIC},
	    	#{order_id,jdbcType=NUMERIC},
	    	#{course_id,jdbcType=NUMERIC},
	    	#{branch_id,jdbcType=NUMERIC},
	    	#{former_unit_price,jdbcType=NUMERIC},
	    	#{former_sum_price,jdbcType=NUMERIC},
	    	#{discount_unit_price,jdbcType=NUMERIC},
	    	#{discount_sum_price,jdbcType=NUMERIC},
	    	#{discount_rate,jdbcType=NUMERIC},
	    	#{discount_amount,jdbcType=NUMERIC},
	    	#{manage_fee,jdbcType=NUMERIC},
	    	#{course_total_count,jdbcType=NUMERIC},
	    	#{course_surplus_count,jdbcType=NUMERIC},
	    	#{course_schedule_count,jdbcType=NUMERIC},
	    	#{create_user,jdbcType=NUMERIC},
	    	sysdate,
	    	#{update_user,jdbcType=NUMERIC},
	    	sysdate,
	    	#{old_id,jdbcType=VARCHAR},
	    	#{surplus_cost,jdbcType=NUMERIC},
	    	#{quit_flag,jdbcType=NUMERIC},
	    	#{order_type,jdbcType=NUMERIC},
	    	#{status,jdbcType=NUMERIC},
	    	#{root_course_id,jdbcType=NUMERIC}
	       )
	</insert>
	
	<select id="queryTotalManageFee" parameterType="java.util.Map" resultType="java.util.Map">
		select sum(nvl(c.manage_fee, 0)) as manage_fee,
			   sum(nvl(c.course_surplus_count, 0)) as course_surplus_count
          from t_order_course c
         where (c.id = #{orderCourseId}
               or c.root_course_id = #{orderCourseId}
           <if test="rootCourseId != null">    
               or c.root_course_id = #{rootCourseId}
               or c.id = #{rootCourseId}
           </if>
               )
	</select>
	
	<update id="updateOrderCourseByOrderCourseLog" parameterType="java.util.Map">
		update t_order_course t
           set t.discount_unit_price = #{discount_unit_price},
               t.quit_flag           = decode(${v_return_count}, 0, 0, 1),
               t.manage_fee         =    
               (select c.manage_fee
                  from t_order_course_log c
                 where c.change_id = #{change_id}
                   and c.id = t.id)
         where
          <if test="id != null">    
          	t.id = #{id}
          </if>
          <if test="root_course_id != null">    
          	t.root_course_id  = #{root_course_id}
          </if>
	</update>

	<!-- 校验订单批改课时是否可以批改 -->
	<select id="checkOrderChangeTimes" parameterType="map" resultType="java.lang.String">
		select case
				 when nvl(toc.course_schedule_count, 0) >= #{changeTimes} then
				  'Y'
				 else
				  'N'
			   end
		  from t_order_course toc
		 where toc.order_type = 1
		   and toc.order_id = #{orderId}
	</select>

    <update id="updateOrderCourseForBjkAttandence" parameterType="com.edu.erp.model.TOrderCourse">
        update t_order_course SET
        course_surplus_count = #{course_surplus_count,jdbcType=NUMERIC},
        surplus_cost = #{surplus_cost,jdbcType=NUMERIC},
        update_time = sysdate,
        update_user = #{update_user,jdbcType=NUMERIC}
        where id = #{id,jdbcType=NUMERIC}
    </update>

	<select id="queryOrderCourseList4Compare" parameterType="map" resultType="map">
		select tcou.id as "courseId",
						tcou.course_no as "courseNo",
						tcou.course_name as "courseName",
						tord.student_id as "erpStudentId",
						tsi.student_name as "erpStudentName",
						tsi.encoding as "erpStudentEncoding",
						tord.order_no as "erpOrderNo",
					 	toct.times as "seq"
			from t_more_teacher_course tmtc,
					 t_course              tcou,
					 t_order_course        toc,
					 t_order_course_times  toct,
					 t_order               tord,
					 tab_student_info      tsi
		 where tmtc.id = tcou.more_teacher_courseid
			 and toc.course_id = tcou.id
			 and toct.ocid = toc.id
			 and tord.id = toc.order_id
			 and tord.student_id = tsi.id
			 and tord.order_status = 1
			 and toct.is_valid = 1
		  <if test="courseId != null">
				and tmtc.id = #{courseId}
		  </if>
			<if test="stuCourseId != null">
				and tcou.id = #{stuCourseId}
			</if>
			<if test="orderNo != null">
				and tord.order_no = #{orderNo}
			</if>
		union all
		select tcou.id as "courseId",
						tcou.course_no as "courseNo",
						tcou.course_name as "courseName",
						tord.student_id as "erpStudentId",
						tsi.student_name as "erpStudentName",
						tsi.encoding as "erpStudentEncoding",
						tord.order_no as "erpOrderNo",
						toct.times as "seq"
			from t_course             tcou,
					 t_order_course       toc,
					 t_order_course_times toct,
					 t_order              tord,
					 tab_student_info     tsi
		 where toc.course_id = tcou.id
			 and toct.ocid = toc.id
			 and tord.id = toc.order_id
			 and tord.student_id = tsi.id
			 and tord.order_status = 1
			 and toct.is_valid = 1
			<if test="courseId != null">
				and tcou.id = #{courseId}
			</if>
			<if test="stuCourseId != null">
				and tcou.id = #{stuCourseId}
			</if>
			<if test="orderNo != null">
				and tord.order_no = #{orderNo}
			</if>
	</select>
</mapper>