<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/data/mongo       
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd  ">
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:properties/db.properties"/>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"   init-method="init" destroy-method="close"> 
	
	   	<property name="driverClassName" value="${jdbc.driverClassName} " />
	   
	  	<property name="url" value="${jdbc.driverUrl}" /> 
	  
	  	<property name="username" value="${jdbc.username}"/> 
	  
	  	<property name="password" value="${jdbc.password}" /> 
	  	<!-- 配置初始化大小、最小、最大 --> 
	  	<property name="initialSize" value="${jdbc.initialSize}" /> 
	  
	  	<property name="minIdle" value="${jdbc.minIdle}" /> 
	  
	  	<property name="maxActive" value="${jdbc.maxActive}" />
	
	  	<!-- 配置获取连接等待超时的时间 --> 
	  	<property name="maxWait" value="${jdbc.maxWait}" />
	
	  	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
	  	<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	
	  	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
	  	<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	
	  	<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
	
	  	<!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
	  	<property name="testOnBorrow" value="${jdbc.testOnBorrow}" /> 
	  
	  	<property name="testOnReturn" value="${jdbc.testOnReturn}" />
	
	  	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
	  	<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" /> 
	  
	  	<property name="maxPoolPreparedStatementPerConnectionSize"  value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
	
	  	<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
	  	<property name="defaultAutoCommit" value="true" />
	
	  	<!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		<property name="validationQuery" value="${jdbc.validationQuery}" /> 
		  
		<property name="filters" value="${jdbc.filters}" />
		
		<!-- 超过时间限制是否回收 -->  
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />  
		<!-- 超时时间；单位为秒 -->  
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" /> 
	</bean>
	
	<bean id="casClientDataSource" class="com.alibaba.druid.pool.DruidDataSource"   init-method="init" destroy-method="close"> 
	
	   <property name="driverClassName" value="${jdbc.driverClassName} " />
	   
	  <property name="url" value="${jdbc.driverUrl}" /> 
	  
	  <property name="username" value="${jdbc.username}"/> 
	  
	  <property name="password" value="${jdbc.password}" /> 
	  <!-- 配置初始化大小、最小、最大 --> 
	  <property name="initialSize" value="${jdbc.initialSize}" /> 
	  
	  <property name="minIdle" value="${jdbc.minIdle}" /> 
	  
	  <property name="maxActive" value="${jdbc.maxActive}" />
	
	  <!-- 配置获取连接等待超时的时间 --> 
	  <property name="maxWait" value="${jdbc.maxWait}" />
	
	  <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
	  <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	
	  <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
	  <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	
	  <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
	
	  <!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
	  <property name="testOnBorrow" value="${jdbc.testOnBorrow}" /> 
	  
	  <property name="testOnReturn" value="${jdbc.testOnReturn}" />
	
	  <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
	  <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" /> 
	  
	  <property name="maxPoolPreparedStatementPerConnectionSize"  value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
	
	  <!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
	  <property name="validationQuery" value="${jdbc.validationQuery}" /> 
	  
	  <property name="filters" value="${jdbc.filters}" /> 

	 </bean>

	
</beans>    