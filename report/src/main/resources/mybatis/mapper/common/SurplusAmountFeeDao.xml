<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.report.dao.SurplusAmountFeeDao">

	<select id="queryReport" parameterType="Map" resultType="com.edu.report.model.TSurplusAmountFee">
		select a.*
		from t_surplus_amount_fee a
		where
			a.performance_bu_id = #{bu_id}
		<if test="branch_id != null and branch_id != '' and branch_id > -1">
			and a.performance_branch_id = #{branch_id}
		</if>
	    <if test="validBranchIds != null and validBranchIds !='' ">
			   and a.performance_branch_id in (${validBranchIds})
	    </if>
		<if test="student_info != null and student_info != ''">
			and (a.student_code like '%${student_info}%'
			or a.student_name like '%${student_info}%')
		</if>
		<if test="business_type != null and business_type != '' and business_type > -1">
			and a.business_type = #{business_type}
		</if>
		union all
		select
			null id,
			'合计' order_no, /*报班单号*/
			null bu_id,
			null bu_name,
			null branch_id,
			null branch_name,
			null performance_bu_id,
			null performance_bu_name,
			null performance_branch_id,
			null performance_branch_name,
			null student_code,
			null student_name,
			null course_name,
			sum(ifnull(t.remain_coursetime,0)) remain_coursetime, /*剩余课时*/
			null unit_price,
			sum(ifnull(t.forward_transfer,0))  forward_transfer, /*预结转*/
			sum(ifnull(t.surplus_amount,0)) 	surplus_amount, /*剩余金额*/
			null business_type,
			null business_type_name,
			null task_flow
		from t_surplus_amount_fee t
		where
			t.performance_bu_id = #{bu_id}
		<if test="branch_id != null and branch_id != '' and branch_id > -1">
			and t.performance_branch_id = #{branch_id}
		</if>
		<if test="student_info != null and student_info != ''">
			and (t.student_code like '%${student_info}%'
			or t.student_name like '%${student_info}%')
		</if>
        <if test="validBranchIds != null and validBranchIds !='' ">
			   and t.performance_branch_id in (${validBranchIds})
	    </if>
		<if test="business_type != null and business_type != '' and business_type > -1">
			and t.business_type = #{business_type}
		</if>
	</select>

	<delete id="deleteAll" parameterType="HashMap">
		delete from t_surplus_amount_fee
	</delete>

	<insert id="insert" parameterType="HashMap">
		insert into
		t_surplus_amount_fee (	
			id,
			order_no,
			branch_name,
			branch_id,
			bu_id,
			bu_name,
			performance_branch_name,
			performance_branch_id,
			performance_bu_name,
			performance_bu_id,
			student_code,
			student_name,
			course_name,
			remain_coursetime,
			unit_price,
			surplus_amount,
			forward_transfer,
			business_type,
			business_type_name,
			task_flow
		)
		(select distinct
			ord_cou.id					id,
			ord.order_no         		order_no, /*报班单号*/
       		org.org_name                branch_name, /*业务校区*/
       		org.id                		branch_id, 
       		org_bu.id					bu_id,
       		org_bu.org_name				bu_name,
       		case when cou.performance_belong_type = 1 then org.org_name else cou.branch_name end performance_branch_name, /*业绩校区*/
       		case when cou.performance_belong_type = 1 then org.id else cou.branch_id end  performance_branch_id,   /*业绩校区*/
          	case when cou.performance_belong_type = 1 then org_bu.org_name else cou.bu_name end performance_bu_name,   /*业绩团队*/
          	case when cou.performance_belong_type = 1 then org_bu.id else cou.bu_id end performance_bu_id,   /*业绩团队*/
       		stu.encoding                 student_code, /*学生编号*/
      	 	stu.student_name             student_name, /*学生姓名*/
       		cou.course_name              course_name, /*课程名称*/
       		ord_cou.course_surplus_count remain_coursetime, /*剩余课时*/
      		ord_cou.discount_unit_price  unit_price, /*当前单价*/
       		ord_cou.surplus_cost         surplus_amount, /*剩余金额*/
       		ord_cou.manage_fee			 forward_transfer,/*预结转*/
       		ord.business_type			 business_type,
       		case when ord.business_type = 1 then '班级课' when ord.business_type = 2 then '一对一' when ord.business_type = 3 then '晚辅导' end  business_type_name,
			#{task_flow}
		from t_order ord
		join t_order_course ord_cou
			on ord.id = ord_cou.order_id
		join tab_organization_info org
			on ord.branch_id = org.id
		left join tab_organization_info org_bu
			on org.parent_id = org_bu.id
		join tab_student_info stu
			on ord.student_id = stu.id
		join vt_course cou
			on ord_cou.course_id = cou.course_id
		where ord_cou.course_surplus_count != 0
			and ord.order_status = 1
		)
	</insert>

</mapper>